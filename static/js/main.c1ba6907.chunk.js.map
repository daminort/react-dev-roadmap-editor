{"version":3,"sources":["utils/CommonUtils.js","constants/editor.js","redux/utils.js","redux/app/actions.js","redux/app/reducer.js","redux/diagram/actions.js","redux/diagram/reducer.js","redux/reducers.js","constants/layout.js","utils/MathUtils.js","config.js","constants/theme.js","constants/common.js","utils/DiagramUtils.js","redux/diagram/selectors.js","redux/app/selectors.js","redux/generators.js","redux/app/saga.js","utils/LocalStorageUtils.js","utils/DOMUtils.js","redux/diagram/saga.js","redux/sagas.js","redux/store.js","constants/machines.js","utils/Machines/PageMachine.js","utils/SizeControlsUtils.js","components/BoxSizeControls/BoxSizeControls.js","components/BoxSizeControls/index.js","components/CurveSizeControls/CurveSizeControls.js","components/CurveSizeControls/index.js","containers/Box/Box.js","containers/Box/index.js","containers/Circle/Circle.js","containers/Circle/index.js","containers/Curve/Curve.js","containers/Curve/index.js","containers/PageSVG/PageSVG.js","containers/PageSVG/index.js","containers/Layout/Layout.style.js","containers/Layout/Layout.js","containers/Layout/index.js","components/ToolbarRow/ToolbarRow.style.js","components/ToolbarRow/ToolbarRow.js","components/ToolbarRow/index.js","components/ToolbarButton/ToolbarButton.style.js","components/ToolbarButton/ToolbarButton.js","components/ToolbarButton/index.js","icons/AlignCenter.js","icons/AlignLeft.js","icons/AlignRight.js","icons/ClearAll.js","icons/Download.js","icons/props.js","icons/Line.js","icons/LineDashed.js","icons/LineDotted.js","icons/LineSolid.js","icons/NewBox.js","icons/NewCircle.js","icons/NewLine.js","icons/Save.js","icons/TextBold.js","icons/TextSize.js","icons/Trash.js","icons/Upload.js","containers/Toolbar/Actions/Actions.js","containers/Toolbar/Actions/index.js","containers/Toolbar/Appearance/Appearance.js","containers/Toolbar/Appearance/index.js","containers/Toolbar/Colors/Colors.js","containers/Toolbar/Colors/index.js","components/Prime/Button/index.js","components/Prime/Button/Button.js","components/Prime/InputNumber/index.js","components/Prime/InputNumber/InputNumber.js","components/Prime/InputText/index.js","components/Prime/InputText/InputText.js","components/Prime/InputTextarea/index.js","components/Prime/InputTextarea/InputTextarea.js","containers/Toolbar/Content/Content.style.js","containers/Toolbar/Content/Content.js","containers/Toolbar/Content/index.js","containers/Toolbar/Elements/Elements.js","containers/Toolbar/Elements/index.js","containers/Toolbar/Page/Page.style.js","containers/Toolbar/Page/Page.js","containers/Toolbar/Page/index.js","containers/Toolbar/Toolbar.style.js","containers/Toolbar/Toolbar.js","containers/Toolbar/index.js","containers/Hidden/DownloadLink/DownloadLink.js","containers/Hidden/DownloadLink/index.js","containers/Hidden/UploadInput/UploadInput.js","containers/Hidden/UploadInput/index.js","containers/Hidden/Hidden.style.js","containers/Hidden/index.js","containers/Hidden/Hidden.js","containers/App/App.style.js","containers/App/index.js","containers/App/App.js","serviceWorker.js","index.js"],"names":["utils_CommonUtils","safeMerge","target","arguments","length","undefined","source","createKeys","targetKeys","keys","sourceKeys","result","cloneDeep","forEach","key","includes","ALIGN","SIZE","sm","md","lg","TEXT_SIZE","DIRECTION","PAGE","width","height","scale","defaultPage","Object","objectSpread","makeActionCreator","type","_len","argNames","Array","_key","_len2","args","_key2","action","payload","isPayload","arg","index","value","getShapesCount","shapes","path","state","store","getState","get","select","TYPES","LOADING_SET","concat","ACTIVE_SHAPE_ID_SET","RESIZE_DATA_SET","RESIZE_DATA_RESET","RESIZE_COMPLETE","CREATE_DATA_SET","CREATE_DATA_RESET","CREATE_COMPLETE","CREATE_CURVE_COMPLETE","DND_COMPLETE","PAGE_DATA_SET","PAGE_DATA_RESET","actions","loadingSet","activeShapeIDSet","resizeDataSet","resizeDataReset","resizeComplete","createDataSet","createDataReset","createComplete","createCurveComplete","dndComplete","pageDataSet","pageDataReset","initState","loading","activeShapeID","page","resize","shapeID","controlID","originShape","create","shapeType","sourceShapeID","targetShapeID","DIAGRAM_STORE","DIAGRAM_RESTORE","DIAGRAM_DOWNLOAD","DIAGRAM_RESET","DOWNLOAD_DATA_UPDATE","DOWNLOAD_START","UPLOAD_FILE_SELECT","UPLOAD_START","SHAPES_SET","SHAPES_RESET","SHAPE_SET","SHAPE_UPDATE","SHAPE_REMOVE","SHAPE_MOVE","SHAPE_RESIZE","CURVE_RESIZE","SHAPE_SET_COLOR","SHAPE_SET_ALIGNMENT","SHAPE_SET_DASHED","SHAPE_SET_NO_BORDER","SHAPE_SET_TEXT_BOLD","SHAPE_SET_TEXT_SIZE","CONTENT_SET","CONTENT_RESET","SHAPE_CONTENT_SET","SHAPE_CONTENT_UPDATE","SHAPE_CONTENT_REMOVE","diagramStore","diagramRestore","diagramDownload","diagramReset","downloadDataUpdate","downloadStart","uploadFileSelect","uploadStart","shapesSet","shapesReset","shapeSet","shapeUpdate","shapeRemove","shapeMove","shapeResize","curveResize","shapeSetColor","shapeSetAlignment","shapeSetDashed","shapeSetNoBorder","shapeSetTextBold","shapeSetTextSize","contentSet","contentReset","shapeContentSet","shapeContentUpdate","shapeContentRemove","content","downloadData","combineReducers","App","_ref","resizeData","CommonUtils","createData","pageData","Diagram","id","shape","initShape","shapeContent","initShapeContent","SIZE_CONTROLS","top","bottom","left","right","start","end","BOX_SIZE_CONTROL_IDS","CURVE_SIZE_CONTROL_IDS","HTML_IDS","downloadLink","uploadInput","utils_MathUtils","MathUtils","classCallCheck","this","isCircle","bind","roundCoord","calculateResize","calculateMoving","calculateDistance","calculateLineIntersection","determineShapeCentre","determineLineCenter","determineShapeSides","determineIntersection","toInteger","radius","minValue","rounded","Math","round","movementX","movementY","x","y","startShape","endShape","startCentre","endCentre","startX","startY","endX","endY","line1","line2","x1","x2","x3","x4","y1","y2","y3","y4","denominator","ua","ub","distanceVector","line","vector","sides","center","edgeDirection","THEME","black","white","yellow","red","grey","green","blue","softBlue","transparent","layout","main","dotted","dashed","toolbar","button","smallRadius","inactive","active","label","title","hint","box","curve","circle","STORAGE_NAMES","bg","utils_DiagramUtils","DiagramUtils","generateShapeID","createBox","createCircle","createCurve","createShapeContent","calculateBorderRadius","calculateBezier","determineBoxTextPosition","radiuses","prefix","shapesCount","align","noBorder","textBold","textSize","bezier","startID","endID","url","info","roundedWidth","roundedHeight","sidesKey","min","distanceX","abs","distanceY","middleX","middleY","isStartVertical","isEndVertical","cpx1","cpy1","cpx2","cpy2","resultX","textAnchor","alignmentBaseline","selectShapes","createSelector","selectShapesList","sortBy","values","selectContent","selectShape","selectShapeContent","selectBoxes","shapesList","filter","selectCurves","selectCircles","selectDownloadData","selectApp","app","selectActiveShapeID","selectResizeData","selectIsResize","Boolean","selectPageData","selectCreateData","rebuildTouchedCurves","selectState","curves","touchedCurves","i","_MathUtils$calculateC","resCurve","regenerator_default","a","wrap","_context","prev","next","sent","abrupt","calculateCurve","updateCurve","put","diagramActions","stop","_marked","readUploadedFile","file","Promise","resolve","reject","reader","FileReader","onloadend","data","JSON","parse","e","readAsText","appSaga","minCellWH","gridStep","activeShape","isTop","isBottom","isLeft","isRight","resShape","appActions","call","saga_marked","_ref2","_ref3","position","resX","resY","_shape","_context2","_marked2","_ref4","_ref5","startShapeID","endShapeID","_context3","_marked3","_ref6","_ref7","resPosition","_context4","_marked4","_context5","all","takeEvery","_marked5","utils_LocalStorageUtils","storeValue","localStorage","setItem","stringify","restoreValue","defaultValue","rawValue","getItem","error","clearValue","removeItem","storeDiagram","_this","restoreDiagram","utils_DOMUtils","clientX","clientY","scrollableArea","document","querySelector","pageHolder","scrollLeft","scrollTop","widthArea","offsetWidth","widthPage","areaStyle","window","getComputedStyle","parseInt","link","getElementById","click","input","diagramSaga","LocalStorageUtils","diagram_saga_marked","diagram","saga_marked2","_data","defineProperty","saga_marked3","saga_marked4","DOMUtils","clickDownloadLink","saga_marked5","_context6","clickUploadInput","_marked6","_context7","t0","console","_marked7","color","_context8","_marked8","_context9","_marked9","_context10","_marked10","_context11","_marked11","_ref8","_ref9","_context12","_marked12","_ref10","_ref11","resTextSize","_context13","_marked13","_ref12","_ref13","resShapes","resContent","_context14","unset","_marked14","_ref14","_ref15","newPosition","_context15","_marked15","_ref16","_ref17","_context16","_marked16","_context17","takeLatest","_marked17","rootSaga","sagas_marked","sagaMiddleware","createSagaMiddleware","middlewares","composeEnhancers","compose","createStore","reducers","applyMiddleware","apply","run","STATES","calmness","shapeSelected","resizingBox","resizingCurve","creating","creatingCurve","EVENTS","PageMachine","init","dispatch","setState","transitions","_STATES$calmness","_STATES$shapeSelected","_STATES$resizingBox","_STATES$resizingCurve","_STATES$creating","_STATES$creatingCurve","event","nextState","buttons","calculateLayoutClickPosition","eventName","handler","newState","sizeControls","ivertedControls","invert","utils_SizeControlsUtils","createCurveDefault","createBoxDefault","createColors","createSizes","createRadius","createStyles","cursor","createCurvePosition","sizes","createBoxPosition","createPosition","detectActiveKey","activeControl","makeControls","colors","styles","activeKey","positions","availableKeys","BoxSizeControls","controls","SizeControlsUtils","elements","map","react_default","createElement","fill","stroke","rx","ry","style","pointerEvents","Fragment","CurveSizeControls","colorInert","colorActive","Box","props","isSelected","textProps","strokeColor","strokeWidth","boxClassName","classnames","selected","textClassName","text-sm","text-md","text-lg","text-bold","transform","className","assign","components_BoxSizeControls","Connected","connect","defaultProps","circleColor","controlColor","Circle","item","cx","cy","r","colorLine","colorControls","Curve","thickness","d","strokeDasharray","components_CurveSizeControls","staticPageStyle","display","backgroundImage","PageSVG","possibleConstructorReturn","getPrototypeOf","onMouseDown","assertThisInitialized","onMouseMove","onMouseUp","onKeyDown","renderBoxes","renderCircles","renderCurves","machine","addEventListener","removeEventListener","prevProps","_this$props","isCreate","createShapeType","_this$props2","resizeControlID","keyCode","boxes","containers_Box","circles","containers_Circle","containers_Curve","_this$props3","minWidth","minHeight","PureComponent","isResize","bindActionCreators","Wrapper","styled","div","_templateObject","Layout","ref","useRef","interval","useEffect","current","setInterval","clearInterval","containers_PageSVG","mapActions","_selectPageData","border","font","ToolbarRow_style_templateObject","ToolbarRow","children","ToolbarRow_style_Wrapper","ToolbarButton_style_templateObject","ToolbarButton","disabled","onClick","wrapperClass","onClickHandler","ToolbarButton_style_Wrapper","AlignCenter","size","index_es","name","AlignLeft","AlignRight","ClearAll","Download","svgProps","xmlns","viewBox","commonProps","strokeLinecap","strokeLinejoin","lineProps","Line","restProps","objectWithoutProperties","LineDashed","icons_Line","LineDotted","LineSolid","NewBox","NewCircle","NewLine","Save","TextBold","TextSize","Trash","Upload","Actions","components_ToolbarButton","icons_Save","icons_Download","icons_Upload","icons_ClearAll","Appearance","isBox","isCurve","onClickAlign","onClickLine","onClickBorder","showAlignment","showLines","showBorders","icons_TextBold","icons_TextSize","icons_AlignLeft","icons_AlignCenter","icons_AlignRight","icons_LineSolid","icons_LineDotted","icons_LineDashed","classes","bgColors","colorTransparent","colorYellow","colorRed","colorGrey","colorBlue","colorGreen","Colors","isShapeSelected","Button","InputNumber","InputText","InputTextarea","Content_style_templateObject","Content","_useState","useState","_useState2","slicedToArray","localTitle","setTitle","_useState3","_useState4","localURL","setURL","_useState5","_useState6","localInfo","setInfo","applyContent","onPressEnter","Content_style_Wrapper","Prime_InputText","placeholder","onChange","onKeyPress","Prime_InputTextarea","autoResize","rows","cols","Prime_Button","Elements","activeShapeType","onClickCreate","icons_NewBox","icons_NewLine","icons_NewCircle","icons_Trash","Page_style_templateObject","Label","_templateObject2","Page","onChangeSize","dataName","Page_style_Wrapper","Prime_InputNumber","max","step","Toolbar_style_templateObject","Toolbar","showColors","showAppearance","showContent","Toolbar_style_Wrapper","components_ToolbarRow","Toolbar_Actions","Toolbar_Page","Toolbar_Elements","Toolbar_Colors","Toolbar_Appearance","Toolbar_Content","DownloadLink","jsonData","blobData","Blob","dataURL","URL","createObjectURL","href","download","UploadInput","accept","files","Hidden_style_templateObject","Hidden","Hidden_style_Wrapper","Hidden_DownloadLink","Hidden_UploadInput","App_style_templateObject","es","App_style_Wrapper","containers_Layout","containers_Toolbar","containers_Hidden","Component","location","hostname","match","ReactDOM","render","containers_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c1ba6907.chunk.js","sourcesContent":["import { cloneDeep, keys } from './lodash';\n\nclass CommonUtils {\n\n  safeMerge = (target = {}, source = {}, createKeys = false) => {\n    const targetKeys = keys(target);\n    const sourceKeys = keys(source);\n    const result     = cloneDeep(target);\n\n    sourceKeys.forEach(key => {\n      if (!targetKeys.includes(key) && !createKeys) {\n        return;\n      }\n\n      result[key] = source[key];\n    });\n\n    return result;\n  }\n}\n\nexport default new CommonUtils();\n","export const ALIGN = {\n  left   : 'left',\n  center : 'center',\n  right  : 'right',\n};\n\nexport const SIZE = {\n  sm : 'sm',\n  md : 'md',\n  lg : 'lg',\n};\n\nexport const TEXT_SIZE = {\n  sm : '10px',\n  md : '12px',\n  lg : '14px',\n};\n\nexport const DIRECTION = {\n  auto       : 'auto',\n  vertical   : 'vertical',\n  horizontal : 'horizontal',\n};\n\nexport const PAGE = {\n  width  : 830,\n  height : 1170,\n  scale  : 1,\n};\n\nexport const defaultPage = { ...PAGE };\n","import { get, keys } from '../utils/lodash';\nimport { store } from './store';\n\nexport function makeActionCreator(type, ...argNames) {\n\n  return function creator(...args) {\n    const action  = { type };\n    const payload = {};\n    let isPayload = false;\n\n    argNames.forEach((arg, index) => {\n      const key    = argNames[index];\n      const value  = args[index];\n      payload[key] = value;\n      isPayload    = true;\n    });\n\n    if (isPayload) {\n      action.payload = payload;\n    }\n\n    return action;\n  };\n}\n\nexport function select(path = null) {\n  const state = store.getState();\n  if (!path) {\n    return state;\n  }\n\n  return get(state, path);\n}\n\nexport function getShapesCount() {\n  const shapes = select('Diagram.shapes');\n  return keys(shapes).length;\n}\n","import { makeActionCreator } from '../utils';\n\nconst prefix = 'App: ';\nconst TYPES = {\n  LOADING_SET           : `${prefix}loadingSet`,\n  ACTIVE_SHAPE_ID_SET   : `${prefix}activeShapeIDSet`,\n\n  RESIZE_DATA_SET       : `${prefix}resizeDataSet`,\n  RESIZE_DATA_RESET     : `${prefix}resizeDataReset`,\n  RESIZE_COMPLETE       : `${prefix}resizeComplete`,\n\n  CREATE_DATA_SET       : `${prefix}createDataSet`,\n  CREATE_DATA_RESET     : `${prefix}createDataReset`,\n  CREATE_COMPLETE       : `${prefix}createComplete`,\n  CREATE_CURVE_COMPLETE : `${prefix}createCurveComplete`,\n\n  DND_COMPLETE          : `${prefix}dndComplete`,\n\n  PAGE_DATA_SET         : `${prefix}pageDataSet`,\n  PAGE_DATA_RESET       : `${prefix}pageDataReset`,\n};\n\nconst actions = {\n  ...TYPES,\n  loadingSet          : makeActionCreator(TYPES.LOADING_SET, 'loading'),\n  activeShapeIDSet    : makeActionCreator(TYPES.ACTIVE_SHAPE_ID_SET, 'shapeID'),\n\n  resizeDataSet       : makeActionCreator(TYPES.RESIZE_DATA_SET, 'resizeData'),\n  resizeDataReset     : makeActionCreator(TYPES.RESIZE_DATA_RESET),\n  resizeComplete      : makeActionCreator(TYPES.RESIZE_COMPLETE),\n\n  createDataSet       : makeActionCreator(TYPES.CREATE_DATA_SET, 'createData'),\n  createDataReset     : makeActionCreator(TYPES.CREATE_DATA_RESET),\n  createComplete      : makeActionCreator(TYPES.CREATE_COMPLETE, 'position'),\n  createCurveComplete : makeActionCreator(TYPES.CREATE_CURVE_COMPLETE, 'startShapeID', 'endShapeID'),\n\n  dndComplete         : makeActionCreator(TYPES.DND_COMPLETE, 'position'),\n\n  pageDataSet         : makeActionCreator(TYPES.PAGE_DATA_SET, 'pageData'),\n  pageDataReset       : makeActionCreator(TYPES.PAGE_DATA_RESET),\n};\n\nexport default actions;\n","import CommonUtils from '../../utils/CommonUtils';\nimport { PAGE } from '../../constants/editor';\nimport actions from './actions';\n\nconst initState = {\n  loading       : false,\n  activeShapeID : '',\n\n  page: {\n    width  : PAGE.width,\n    height : PAGE.height,\n    scale  : PAGE.scale,\n  },\n\n  resize: {\n    shapeID     : '',\n    controlID   : '',\n    originShape : null,\n  },\n\n  create: {\n    shapeType     : null,\n    sourceShapeID : '',\n    targetShapeID : '',\n  },\n};\n\nexport default function appReducer(state = initState, { type, payload }) {\n\n  switch (type) {\n    case actions.LOADING_SET: {\n      return {\n        ...state,\n        loading: payload.loading,\n      };\n    }\n    case actions.ACTIVE_SHAPE_ID_SET: {\n      return {\n        ...state,\n        activeShapeID: payload.shapeID,\n      };\n    }\n    case actions.RESIZE_DATA_SET: {\n      const { resize } = state;\n      const { resizeData } = payload;\n      return {\n        ...state,\n        resize: CommonUtils.safeMerge(resize, resizeData),\n      };\n    }\n    case actions.RESIZE_DATA_RESET: {\n      return {\n        ...state,\n        resize: initState.resize,\n      };\n    }\n    case actions.CREATE_DATA_SET: {\n      const { create } = state;\n      const { createData } = payload;\n      return {\n        ...state,\n        create: CommonUtils.safeMerge(create, createData),\n      };\n    }\n    case actions.CREATE_DATA_RESET: {\n      return {\n        ...state,\n        create: initState.create,\n      };\n    }\n    case actions.PAGE_DATA_SET: {\n      const { page } = state;\n      const { pageData } = payload;\n      return {\n        ...state,\n        page: CommonUtils.safeMerge(page, pageData),\n      };\n    }\n    case actions.PAGE_DATA_RESET: {\n      return {\n        ...state,\n        page: initState.page,\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n}\n","import { makeActionCreator } from '../utils';\n\nconst prefix = 'Diagram: ';\nconst TYPES = {\n  DIAGRAM_STORE           : `${prefix}diagramStore`,\n  DIAGRAM_RESTORE         : `${prefix}diagramRestore`,\n  DIAGRAM_DOWNLOAD        : `${prefix}diagramDownload`,\n  DIAGRAM_RESET           : `${prefix}diagramReset`,\n\n  DOWNLOAD_DATA_UPDATE    : `${prefix}downloadDataUpdate`,\n  DOWNLOAD_START          : `${prefix}downloadStart`,\n\n  UPLOAD_FILE_SELECT      : `${prefix}uploadFileSelect`,\n  UPLOAD_START            : `${prefix}uploadStart`,\n\n  SHAPES_SET              : `${prefix}shapesSet`,\n  SHAPES_RESET            : `${prefix}shapesReset`,\n\n  SHAPE_SET               : `${prefix}shapeSet`,\n  SHAPE_UPDATE            : `${prefix}shapeUpdate`,\n  SHAPE_REMOVE            : `${prefix}shapeRemove`,\n  SHAPE_MOVE              : `${prefix}shapeMove`,\n  SHAPE_RESIZE            : `${prefix}shapeResize`,\n  CURVE_RESIZE            : `${prefix}curveResize`,\n\n  SHAPE_SET_COLOR         : `${prefix}shapeSetColor`,\n  SHAPE_SET_ALIGNMENT     : `${prefix}shapeSetAlignment`,\n  SHAPE_SET_DASHED        : `${prefix}shapeSetDashed`,\n  SHAPE_SET_NO_BORDER     : `${prefix}shapeSetNoBorder`,\n  SHAPE_SET_TEXT_BOLD     : `${prefix}shapeSetTextBold`,\n  SHAPE_SET_TEXT_SIZE     : `${prefix}shapeSetTextSize`,\n\n  CONTENT_SET             : `${prefix}contentSet`,\n  CONTENT_RESET           : `${prefix}contentReset`,\n\n  SHAPE_CONTENT_SET       : `${prefix}shapeContentSet`,\n  SHAPE_CONTENT_UPDATE    : `${prefix}shapeContentUpdate`,\n  SHAPE_CONTENT_REMOVE    : `${prefix}shapeContentRemove`,\n};\n\nconst actions = {\n  ...TYPES,\n  diagramStore          : makeActionCreator(TYPES.DIAGRAM_STORE),\n  diagramRestore        : makeActionCreator(TYPES.DIAGRAM_RESTORE),\n  diagramDownload       : makeActionCreator(TYPES.DIAGRAM_DOWNLOAD),\n  diagramReset          : makeActionCreator(TYPES.DIAGRAM_RESET),\n\n  downloadDataUpdate    : makeActionCreator(TYPES.DOWNLOAD_DATA_UPDATE, 'downloadData'),\n  downloadStart         : makeActionCreator(TYPES.DOWNLOAD_START),\n\n  uploadFileSelect      : makeActionCreator(TYPES.UPLOAD_FILE_SELECT),\n  uploadStart           : makeActionCreator(TYPES.UPLOAD_START, 'file'),\n\n  shapesSet             : makeActionCreator(TYPES.SHAPES_SET, 'shapes'),\n  shapesReset           : makeActionCreator(TYPES.SHAPES_RESET),\n\n  shapeSet              : makeActionCreator(TYPES.SHAPE_SET, 'id', 'shape'),\n  shapeUpdate           : makeActionCreator(TYPES.SHAPE_UPDATE, 'id', 'shape'),\n  shapeRemove           : makeActionCreator(TYPES.SHAPE_REMOVE, 'id'),\n  shapeMove             : makeActionCreator(TYPES.SHAPE_MOVE, 'id', 'movementX', 'movementY'),\n  shapeResize           : makeActionCreator(TYPES.SHAPE_RESIZE, 'id', 'movementX', 'movementY', 'controlID'),\n  curveResize           : makeActionCreator(TYPES.CURVE_RESIZE, 'id', 'movementX', 'movementY', 'controlID'),\n\n  shapeSetColor         : makeActionCreator(TYPES.SHAPE_SET_COLOR, 'id', 'color'),\n  shapeSetAlignment     : makeActionCreator(TYPES.SHAPE_SET_ALIGNMENT, 'id', 'align'),\n  shapeSetDashed        : makeActionCreator(TYPES.SHAPE_SET_DASHED, 'id', 'dashed'),\n  shapeSetNoBorder      : makeActionCreator(TYPES.SHAPE_SET_NO_BORDER, 'id', 'noBorder'),\n  shapeSetTextBold      : makeActionCreator(TYPES.SHAPE_SET_TEXT_BOLD, 'id'),\n  shapeSetTextSize      : makeActionCreator(TYPES.SHAPE_SET_TEXT_SIZE, 'id'),\n\n  contentSet            : makeActionCreator(TYPES.CONTENT_SET, 'content'),\n  contentReset          : makeActionCreator(TYPES.CONTENT_RESET),\n\n  shapeContentSet       : makeActionCreator(TYPES.SHAPE_CONTENT_SET, 'id', 'shapeContent'),\n  shapeContentUpdate    : makeActionCreator(TYPES.SHAPE_CONTENT_UPDATE, 'id', 'shapeContent'),\n  shapeContentRemove    : makeActionCreator(TYPES.SHAPE_CONTENT_REMOVE, 'id'),\n};\n\nexport default actions;\n","import CommonUtils from '../../utils/CommonUtils';\nimport { cloneDeep } from '../../utils/lodash';\nimport actions from './actions';\n\nconst initState = {\n  shapes : {\n    // shapeID: { ...shapeBody },\n  },\n  content: {\n    // shapeID: { ...contentBody (only for Boxes) },\n  },\n\n  downloadData: null,\n};\n\nexport default function diagramReducer(state = initState, { type, payload }) {\n\n  switch (type) {\n    case actions.SHAPES_SET: {\n      return {\n        ...state,\n        shapes: { ...payload.shapes },\n      };\n    }\n    case actions.SHAPES_RESET: {\n      return {\n        ...state,\n        shapes: {},\n      };\n    }\n    case actions.SHAPE_SET: {\n      const shapes = cloneDeep(state.shapes);\n      const { id, shape } = payload;\n      shapes[id] = shape;\n\n      return {\n        ...state,\n        shapes,\n      };\n    }\n    case actions.SHAPE_UPDATE: {\n      const shapes = cloneDeep(state.shapes);\n      const { id, shape } = payload;\n      const initShape = shapes[id];\n      shapes[id] = CommonUtils.safeMerge(initShape, shape);\n\n      return {\n        ...state,\n        shapes,\n      };\n    }\n\n    case actions.CONTENT_SET: {\n      return {\n        ...state,\n        content: { ...payload.content },\n      };\n    }\n    case actions.CONTENT_RESET: {\n      return {\n        ...state,\n        content: {},\n      };\n    }\n    case actions.SHAPE_CONTENT_SET: {\n      const content = cloneDeep(state.content);\n      const { id, shapeContent } = payload;\n      content[id] = shapeContent;\n\n      return {\n        ...state,\n        content,\n      };\n    }\n    case actions.SHAPE_CONTENT_UPDATE: {\n      const content = cloneDeep(state.content);\n      const { id, shapeContent } = payload;\n      const initShapeContent = content[id];\n      content[id] = CommonUtils.safeMerge(initShapeContent, shapeContent);\n\n      return {\n        ...state,\n        content,\n      };\n    }\n\n    case actions.DOWNLOAD_DATA_UPDATE: {\n      const { downloadData } = payload;\n      return {\n        ...state,\n        downloadData,\n      };\n    }\n\n    default: {\n      return state;\n    }\n  }\n}\n","import { combineReducers } from 'redux';\nimport App from './app/reducer';\nimport Diagram from './diagram/reducer';\n\nexport default combineReducers({\n  App,\n  Diagram,\n});\n","export const SIZE_CONTROLS = {\n  top    : 'sizeControlTop',\n  bottom : 'sizeControlBottom',\n  left   : 'sizeControlLeft',\n  right  : 'sizeControlRight',\n  start  : 'sizeControlStart',\n  end    : 'sizeControlEnd',\n};\n\nexport const BOX_SIZE_CONTROL_IDS = [\n  SIZE_CONTROLS.top,\n  SIZE_CONTROLS.bottom,\n  SIZE_CONTROLS.left,\n  SIZE_CONTROLS.right,\n];\n\nexport const CURVE_SIZE_CONTROL_IDS = [\n  SIZE_CONTROLS.start,\n  SIZE_CONTROLS.end,\n];\n\nexport const HTML_IDS = {\n  ...SIZE_CONTROLS,\n  page         : 'page',\n  downloadLink : 'downloadLink',\n  uploadInput  : 'uploadInput',\n};\n","import { gridStep } from '../config';\nimport { SIZE_CONTROLS } from '../constants/layout';\nimport { DIRECTION } from '../constants/editor';\nimport { toInteger } from './lodash';\n\nclass MathUtils {\n\n  constructor() {\n    this.isCircle                  = this.isCircle.bind(this);\n    this.roundCoord                = this.roundCoord.bind(this);\n\n    this.calculateResize           = this.calculateResize.bind(this);\n    this.calculateMoving           = this.calculateMoving.bind(this);\n    this.calculateDistance         = this.calculateDistance.bind(this);\n    this.calculateLineIntersection = this.calculateLineIntersection.bind(this);\n\n    this.determineShapeCentre      = this.determineShapeCentre.bind(this);\n    this.determineLineCenter       = this.determineLineCenter.bind(this);\n    this.determineShapeSides       = this.determineShapeSides.bind(this);\n    this.determineIntersection     = this.determineIntersection.bind(this);\n  }\n\n  isCircle(shape) {\n    return toInteger(shape.radius) > 0;\n  }\n\n  roundCoord(value, minValue = 0) {\n    const rounded = Math.round(value / gridStep) * gridStep;\n    return rounded >= minValue ? rounded : minValue;\n  }\n\n  // Calculations ----------------------------------------------------------------------------------\n  calculateResize(shape, movementX, movementY, controlID) {\n    let { x, y, width, height } = shape;\n    switch (controlID) {\n      case SIZE_CONTROLS.top: {\n        y += movementY;\n        height += movementY * (-1);\n        break;\n      }\n      case SIZE_CONTROLS.bottom: {\n        height += movementY;\n        break;\n      }\n      case SIZE_CONTROLS.left: {\n        x += movementX;\n        width += movementX * (-1);\n        break;\n      }\n      case SIZE_CONTROLS.right: {\n        width += movementX;\n        break;\n      }\n      default:\n    }\n\n    return {\n      x,\n      y,\n      width,\n      height,\n    };\n  }\n\n  calculateMoving(shape, movementX, movementY) {\n\n    return {\n      x: shape.x + movementX,\n      y: shape.y + movementY,\n    };\n  }\n\n  calculateDistance(startShape, endShape) {\n    const startCentre = this.determineShapeCentre(startShape);\n    const endCentre   = this.determineShapeCentre(endShape);\n\n    return {\n      startX : startCentre.x,\n      startY : startCentre.y,\n      endX   : endCentre.x,\n      endY   : endCentre.y,\n    };\n  }\n\n  calculateLineIntersection(line1, line2) {\n\n    const x1 = line1.startX;\n    const x2 = line1.endX;\n    const x3 = line2.startX;\n    const x4 = line2.endX;\n\n    const y1 = line1.startY;\n    const y2 = line1.endY;\n    const y3 = line2.startY;\n    const y4 = line2.endY;\n\n    // Check if none of the lines are of length 0\n    if ((x1 === x2 && y1 === y2) || (x3 === x4 && y3 === y4)) {\n      return false;\n    }\n\n    const denominator = ((y4 - y3) * (x2 - x1) - (x4 - x3) * (y2 - y1));\n\n    // Lines are parallel\n    if (denominator === 0) {\n      return false;\n    }\n\n    const ua = ((x4 - x3) * (y1 - y3) - (y4 - y3) * (x1 - x3)) / denominator;\n    const ub = ((x2 - x1) * (y1 - y3) - (y2 - y1) * (x1 - x3)) / denominator;\n\n    // is the intersection along the segments\n    if (ua < 0 || ua > 1 || ub < 0 || ub > 1) {\n      return false;\n    }\n\n    // Return a object with the x and y coordinates of the intersection\n    const x = x1 + ua * (x2 - x1);\n    const y = y1 + ua * (y2 - y1);\n\n    return { x, y };\n  }\n\n  calculateCurve(startShape, endShape) {\n    const distanceVector = this.calculateDistance(startShape, endShape);\n    const start          = this.determineIntersection(startShape, distanceVector);\n    const end            = this.determineIntersection(endShape, distanceVector);\n\n    start.id = startShape.id;\n    end.id   = endShape.id;\n\n    return {\n      start,\n      end,\n    };\n  }\n\n  // Determining -----------------------------------------------------------------------------------\n  determineShapeCentre(shape) {\n    if (this.isCircle(shape)) {\n      return {\n        x: shape.x,\n        y: shape.y,\n      };\n    }\n\n    return {\n      x: shape.x + (shape.width / 2),\n      y: shape.y + (shape.height / 2),\n    };\n  }\n\n  determineLineCenter(line) {\n    const isVertical = (line.startX === line.endX);\n    if (isVertical) {\n      return {\n        x: line.startX,\n        y: line.startY + (line.endY - line.startY) / 2,\n      };\n    }\n\n    return {\n      x: line.startX + (line.endX - line.startX) / 2,\n      y: line.startY,\n    };\n  }\n\n  determineShapeSides(shape) {\n    if (this.isCircle(shape)) {\n      const { x, y, radius } = shape;\n      const top = {\n        startX : x - radius,\n        startY : y - radius,\n        endX   : x + radius,\n        endY   : y - radius,\n      };\n      const left = {\n        startX : x - radius,\n        startY : y - radius,\n        endX   : x - radius,\n        endY   : y + radius,\n      };\n      const right = {\n        startX : top.endX,\n        startY : top.endY,\n        endX   : top.endX,\n        endY   : y + radius,\n      };\n      const bottom = {\n        startX : top.startX,\n        startY : left.endY,\n        endX   : top.endX,\n        endY   : right.endY,\n      };\n\n      return {\n        top,\n        left,\n        right,\n        bottom,\n      };\n    }\n\n    const top = {\n      startX : shape.x,\n      startY : shape.y,\n      endX   : shape.x + shape.width,\n      endY   : shape.y,\n    };\n    const left = {\n      startX : shape.x,\n      startY : shape.y,\n      endX   : shape.x,\n      endY   : shape.y + shape.height,\n    };\n    const right = {\n      startX : top.endX,\n      startY : top.endY,\n      endX   : top.endX,\n      endY   : top.endY + shape.height,\n    };\n    const bottom = {\n      startX : top.startX,\n      startY : left.endY,\n      endX   : top.endX,\n      endY   : right.endY,\n    };\n\n    return {\n      top,\n      left,\n      right,\n      bottom,\n    };\n  }\n\n  determineIntersection(shape, vector) {\n    const sides = this.determineShapeSides(shape);\n\n    const intersectionTop = this.calculateLineIntersection(sides.top, vector);\n    if (intersectionTop) {\n      const center = this.determineLineCenter(sides.top);\n      return {\n        ...center,\n        edgeDirection: DIRECTION.horizontal,\n      };\n    }\n\n    const intersectionLeft = this.calculateLineIntersection(sides.left, vector);\n    if (intersectionLeft) {\n      const center = this.determineLineCenter(sides.left);\n      return {\n        ...center,\n        edgeDirection: DIRECTION.vertical,\n      };\n    }\n\n    const intersectionRight = this.calculateLineIntersection(sides.right, vector);\n    if (intersectionRight) {\n      const center = this.determineLineCenter(sides.right);\n      return {\n        ...center,\n        edgeDirection: DIRECTION.vertical,\n      };\n    }\n\n    const intersectionBottom = this.calculateLineIntersection(sides.bottom, vector);\n    if (intersectionBottom) {\n      const center = this.determineLineCenter(sides.bottom);\n      return {\n        ...center,\n        edgeDirection: DIRECTION.horizontal,\n      };\n    }\n\n    return {\n      x: 0,\n      y: 0,\n      edgeDirection: DIRECTION.vertical,\n    };\n  }\n}\n\nexport default new MathUtils();\n","export const gridStep = 10;\nexport const autoSaveInterval = 1 * 60 * 1000; // 1 min\n","export const THEME = {\n  bg: {\n\t\tblack       : '#000000',\n    white       : '#ffffff',\n    yellow      : '#ffff66',\n    red         : '#ffcc99',\n    grey        : '#cccccc',\n    green       : '#b3d89d',\n    blue        : '#008fba',\n    softBlue    : '#dae8fc',\n    transparent : 'transparent',\n    layout      : '#f1eee8',\n  },\n  border: {\n    main        : '1px solid rgba(0, 0, 0, 0.6)',\n    dotted      : '1px dotted rgba(0, 0, 0, 0.6)',\n    dashed      : '1px dashed rgba(0, 0, 0, 0.6)',\n    toolbar     : '1px solid rgba(0, 0, 0, 0.1)',\n    button      : '1px solid rgba(0, 0, 0, 0.4)',\n    radius      : '8px',\n    smallRadius : '4px',\n  },\n  sizeControls: {\n    inactive : 'rgba(16, 80, 255, 0.5)',\n    active   : 'rgb(255, 0, 0)',\n  },\n  color: {\n    red: '#cd0000',\n  },\n  font: {\n    main  : '12px',\n    label : '13px',\n    title : '14px',\n    hint  : '11px',\n  },\n  size: {\n    toolbar: '320px',\n  },\n};\n","export const TYPES = {\n  box    : 'box',\n  curve  : 'curve',\n  circle : 'circle',\n};\n\nexport const STORAGE_NAMES = {\n  shapes  : 'shapes',\n  content : 'content',\n  page    : 'page',\n};\n","import { getShapesCount } from '../redux/utils';\nimport { THEME } from '../constants/theme';\nimport { TYPES } from '../constants/common';\nimport { ALIGN, DIRECTION, SIZE } from '../constants/editor';\n\nimport MathUtils from './MathUtils';\n\nconst { bg } = THEME;\n\nclass DiagramUtils {\n\n  constructor() {\n    this.generateShapeID          = this.generateShapeID.bind(this);\n    this.createBox                = this.createBox.bind(this);\n    this.createCircle             = this.createCircle.bind(this);\n    this.createCurve              = this.createCurve.bind(this);\n    this.createShapeContent       = this.createShapeContent.bind(this);\n\n    this.calculateBorderRadius    = this.calculateBorderRadius.bind(this);\n    this.calculateBezier          = this.calculateBezier.bind(this);\n\n    this.determineBoxTextPosition = this.determineBoxTextPosition.bind(this);\n\n    this.radiuses = {};\n  }\n\n  generateShapeID(prefix = 'shape') {\n    const shapesCount = getShapesCount();\n    return `${prefix}-${shapesCount}`;\n  }\n\n  // Creating shapes -------------------------------------------------------------------------------\n  createBox(x, y) {\n    return {\n      id       : this.generateShapeID(),\n      type     : TYPES.box,\n      x        : x || 10,\n      y        : y || 10,\n      width    : 120,\n      height   : 30,\n      bg       : bg.grey,\n      align    : ALIGN.center,\n      noBorder : false,\n      textBold : false,\n      textSize : SIZE.md,\n    };\n  }\n\n  createCircle(x, y) {\n    return {\n      id     : this.generateShapeID(),\n      type   : TYPES.circle,\n      x      : x || 10,\n      y      : y || 10,\n      radius : 10,\n    };\n  }\n\n  createCurve(start, end) {\n    const bezier = this.calculateBezier(start, end);\n\n    return {\n      id      : this.generateShapeID('curve'),\n      type    : TYPES.curve,\n      startID : start.id,\n      endID   : end.id,\n      dashed  : false,\n      ...bezier,\n    };\n  }\n\n  createShapeContent(id, title = '') {\n    return {\n      id,\n      title : title || id,\n      url   : '',\n      info  : '',\n    };\n  }\n\n  // Updating existing shapes ----------------------------------------------------------------------\n  updateCurve(curve, start, end) {\n    const bezier = this.calculateBezier(start, end);\n\n    return {\n      ...curve,\n      ...bezier,\n    };\n  }\n\n  // Calculations ----------------------------------------------------------------------------------\n  calculateBorderRadius(width, height) {\n    const roundedWidth  = MathUtils.roundCoord(width);\n    const roundedHeight = MathUtils.roundCoord(height);\n    const sidesKey = `${roundedWidth}:${roundedHeight}`;\n    if (this[sidesKey]) {\n      return this[sidesKey];\n    }\n\n    const min          = Math.min(roundedWidth, roundedHeight);\n    const radius       = (min / 10) * 1.5;\n    this.radiuses[min] = radius;\n    this[sidesKey]     = radius;\n\n    return radius;\n  }\n\n  calculateBezier(start, end) {\n\n    const distanceX = Math.abs(end.x - start.x);\n    const distanceY = Math.abs(end.y - start.y);\n    const middleX   = Math.min(start.x, end.x) + (distanceX) / 2;\n    const middleY   = Math.min(start.y, end.y) + (distanceY) / 2;\n\n    const isStartVertical = (start.edgeDirection === DIRECTION.horizontal);\n    const isEndVertical   = (end.edgeDirection === DIRECTION.horizontal);\n\n    const cpx1 = isStartVertical ? start.x : middleX;\n    const cpy1 = isStartVertical ? middleY : start.y;\n\n    const cpx2 = isEndVertical ? end.x   : middleX;\n    const cpy2 = isEndVertical ? middleY : end.y;\n\n    return {\n      x1   : start.x,\n      y1   : start.y,\n      x2   : end.x,\n      y2   : end.y,\n      cpx1 : cpx1,\n      cpy1 : cpy1,\n      cpx2 : cpx2,\n      cpy2 : cpy2,\n    };\n  }\n\n  // Determining -----------------------------------------------------------------------------------\n  determineBoxTextPosition(shape, radius = 0) {\n    const { x, y, width, height, align } = shape;\n\n    const centerY = y + height / 2;\n    const centerX = x + width / 2;\n    const leftX   = x + radius;\n    const rightX  = x + width - radius;\n\n    let resultX = centerX;\n    let textAnchor = 'middle';\n    if (align === ALIGN.left) {\n      resultX = leftX;\n      textAnchor = 'start';\n    }\n    if (align === ALIGN.right) {\n      resultX = rightX;\n      textAnchor = 'end';\n    }\n\n    return {\n      x: resultX,\n      y: centerY,\n      alignmentBaseline: 'middle',\n      textAnchor,\n    };\n  }\n}\n\nexport default new DiagramUtils();\n","import { createSelector } from 'reselect';\n\nimport { TYPES } from '../../constants/common';\nimport { values, sortBy } from '../../utils/lodash';\n\nconst shapes       = (state) => state.Diagram.shapes;\nconst content      = (state) => state.Diagram.content;\nconst downloadData = (state) => state.Diagram.downloadData;\n\nexport const selectShapes = createSelector(\n  [shapes],\n  (shapes) => shapes,\n);\n\nexport const selectShapesList = createSelector(\n  [selectShapes],\n  (shapes) => sortBy(values(shapes), 'zIndex'),\n);\n\nexport const selectContent = createSelector(\n  [content],\n  (content) => content,\n);\n\nexport const selectShape = (id) => {\n  return createSelector(\n    [selectShapes],\n    (shapes) => shapes[id],\n  );\n};\n\nexport const selectShapeContent = (id) => {\n  return createSelector(\n    [selectContent],\n    (content) => content[id],\n  );\n};\n\nexport const selectBoxes = createSelector(\n  [selectShapesList],\n  (shapesList) => shapesList.filter(shape => shape.type === TYPES.box),\n);\n\nexport const selectCurves = createSelector(\n  [selectShapesList],\n  (shapesList) => shapesList.filter(shape => shape.type === TYPES.curve),\n);\n\nexport const selectCircles = createSelector(\n  [selectShapesList],\n  (shapesList) => shapesList.filter(shape => shape.type === TYPES.circle),\n);\n\nexport const selectDownloadData = createSelector(\n  [downloadData],\n  (downloadData) => downloadData,\n);\n","import { createSelector } from 'reselect';\n\nconst app    = (state) => state.App;\nconst page   = (state) => state.App.page;\nconst resize = (state) => state.App.resize;\nconst create = (state) => state.App.create;\n\n// App --------------------------------------------------------------------------------------------\nexport const selectApp = createSelector(\n  [app],\n  (app) => app,\n);\n\nexport const selectLoading = createSelector(\n  [selectApp],\n  (app) => app.loading,\n);\n\nexport const selectActiveShapeID = createSelector(\n  [selectApp],\n  (app) => app.activeShapeID,\n);\n\n// Resize -----------------------------------------------------------------------------------------\nexport const selectResizeData = createSelector(\n  [resize],\n  (resize) => resize,\n);\n\nexport const selectIsResize = createSelector(\n  [selectResizeData],\n  (resize) => Boolean(resize.shapeID),\n);\n\n// Page -------------------------------------------------------------------------------------------\nexport const selectPageData = createSelector(\n  [page],\n  (page) => page,\n);\n\n// Create -----------------------------------------------------------------------------------------\nexport const selectCreateData = createSelector(\n  [create],\n  (create) => create,\n);\n\nexport const selectIsCreate = createSelector(\n  [selectCreateData],\n  (create) => Boolean(create.shapeType),\n);\n","import { put, select } from 'redux-saga/effects';\n\nimport MathUtils from '../utils/MathUtils';\nimport DiagramUtils from '../utils/DiagramUtils';\n\nimport diagramActions from './diagram/actions';\nimport { selectShapes, selectCurves } from './diagram/selectors';\n\nfunction selectState(state) {\n\n  return {\n    shapes : selectShapes(state),\n    curves : selectCurves(state),\n  };\n}\n\nexport function* rebuildTouchedCurves(activeShapeID) {\n  const { shapes, curves } = yield select(selectState);\n  const touchedCurves = curves.filter(curve => {\n    return (curve.startID === activeShapeID || curve.endID === activeShapeID);\n  });\n  if (touchedCurves.length === 0) {\n    return;\n  }\n\n  for (let i = 0; i < touchedCurves.length; i++) {\n    const curve      = touchedCurves[i];\n    const startShape = shapes[curve.startID];\n    const endShape   = shapes[curve.endID];\n\n    const { start, end } = MathUtils.calculateCurve(startShape, endShape);\n    const resCurve = DiagramUtils.updateCurve(curve, start, end);\n\n    yield put(diagramActions.shapeSet(resCurve.id, resCurve));\n  }\n}\n\nexport function readUploadedFile(file) {\n\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.onloadend = () => {\n      try {\n        const data = JSON.parse(reader.result);\n        resolve(data);\n\n      } catch (e) {\n        reject(e);\n      }\n    };\n\n    reader.readAsText(file);\n  });\n}\n\n/*\nexport function* sleep(time) {\n  yield new Promise(resolve => {\n    timeoutRef = setTimeout(resolve, time);\n  });\n}\n\nfunction* clearSleep() {\n  yield new Promise(resolve => {\n    clearTimeout(timeoutRef);\n    resolve();\n  });\n}\n*/\n","import { all, takeEvery, put, select, call } from 'redux-saga/effects';\n\nimport MathUtils from '../../utils/MathUtils';\nimport DiagramUtils from '../../utils/DiagramUtils';\nimport { gridStep } from '../../config';\nimport { TYPES } from '../../constants/common';\nimport { SIZE_CONTROLS } from '../../constants/layout';\n\nimport diagramActions from '../diagram/actions';\nimport appActions from './actions';\n\nimport { selectShape, selectCurves } from '../diagram/selectors';\nimport { selectResizeData, selectCreateData } from './selectors';\n\nimport { rebuildTouchedCurves } from '../generators';\n\nconst minCellWH = gridStep * 2;\n\nfunction selectState(state) {\n  const { App, Diagram } = state;\n  const { activeShapeID } = App;\n\n  return {\n    activeShapeID,\n    activeShape : selectShape(activeShapeID)(state),\n    resizeData  : selectResizeData(state),\n    createData  : selectCreateData(state),\n    shapes      : Diagram.shapes,\n    curves      : selectCurves(state),\n  };\n}\n\nfunction* resizeComplete() {\n\n  const { activeShapeID, activeShape, resizeData } = yield select(selectState);\n  const { x, y, width, height } = activeShape;\n  const { controlID } = resizeData;\n\n  const isTop    = (controlID === SIZE_CONTROLS.top);\n  const isBottom = (controlID === SIZE_CONTROLS.bottom);\n  const isLeft   = (controlID === SIZE_CONTROLS.left);\n  const isRight  = (controlID === SIZE_CONTROLS.right);\n\n  const resShape = {\n    x      : isLeft ? MathUtils.roundCoord(x) : x,\n    y      : isTop  ? MathUtils.roundCoord(y) : y,\n    width  : (isLeft || isRight) ? MathUtils.roundCoord(width, minCellWH) : width,\n    height : (isTop || isBottom) ? MathUtils.roundCoord(height, minCellWH) : height,\n  };\n\n  yield put(diagramActions.shapeUpdate(activeShapeID, resShape));\n  yield put(appActions.resizeDataReset());\n  yield call(rebuildTouchedCurves, activeShapeID);\n}\n\nfunction* createComplete({ payload }) {\n\n  const { createData } = yield select(selectState);\n  const { shapeType } = createData;\n  const { position } = payload;\n  const { x, y } = position;\n\n  const resX = MathUtils.roundCoord(x);\n  const resY = MathUtils.roundCoord(y);\n\n  // Box\n  if (shapeType === TYPES.box) {\n    const shape = DiagramUtils.createBox(resX, resY);\n    const shapeContent = DiagramUtils.createShapeContent(shape.id);\n\n    yield put(diagramActions.shapeContentSet(shape.id, shapeContent));\n    yield put(diagramActions.shapeSet(shape.id, shape));\n    yield put(appActions.activeShapeIDSet(shape.id));\n  }\n\n  // Circle\n  if (shapeType === TYPES.circle) {\n    const shape = DiagramUtils.createCircle(resX, resY);\n\n    yield put(diagramActions.shapeSet(shape.id, shape));\n    yield put(appActions.activeShapeIDSet(shape.id));\n  }\n\n  yield put(appActions.createDataReset());\n}\n\nfunction* createCurveComplete({ payload }) {\n\n  const { shapes } = yield select(selectState);\n  const { startShapeID, endShapeID } = payload;\n\n  const startShape = shapes[startShapeID];\n  const endShape   = shapes[endShapeID];\n\n  const { start, end } = MathUtils.calculateCurve(startShape, endShape);\n\n  const curve = DiagramUtils.createCurve(start, end);\n\n  yield put(diagramActions.shapeSet(curve.id, curve));\n  yield put(appActions.activeShapeIDSet(endShapeID));\n  yield put(appActions.createDataReset());\n}\n\nfunction* dndComplete({ payload }) {\n\n  const { activeShapeID } = yield select(selectState);\n  const { position } = payload;\n  const { x, y } = position;\n\n  const resPosition = {\n    x : MathUtils.roundCoord(x),\n    y : MathUtils.roundCoord(y),\n  };\n\n  yield put(diagramActions.shapeUpdate(activeShapeID, resPosition));\n  yield call(rebuildTouchedCurves, activeShapeID);\n}\n\nexport default function* appSaga() {\n  yield all([\n    takeEvery(appActions.RESIZE_COMPLETE, resizeComplete),\n    takeEvery(appActions.CREATE_COMPLETE, createComplete),\n    takeEvery(appActions.CREATE_CURVE_COMPLETE, createCurveComplete),\n    takeEvery(appActions.DND_COMPLETE, dndComplete),\n  ]);\n}\n","import { STORAGE_NAMES } from '../constants/common';\n\nclass LocalStorageUtils {\n\n  // Common -------------------------------------------------------------------\n  storeValue = (key, value) => {\n    localStorage.setItem(key, JSON.stringify(value));\n  }\n\n  restoreValue = (key, defaultValue = null) => {\n    try {\n      const rawValue = localStorage.getItem(key);\n      if (!rawValue) {\n        return defaultValue;\n      }\n\n      return JSON.parse(rawValue);\n\n    } catch (error) {\n      return defaultValue;\n    }\n  }\n\n  clearValue = (key) => {\n    localStorage.removeItem(key);\n  }\n\n  // Custom -------------------------------------------------------------------\n  storeDiagram = (shapes, content, page) => {\n    this.storeValue(STORAGE_NAMES.shapes, shapes);\n    this.storeValue(STORAGE_NAMES.content, content);\n    this.storeValue(STORAGE_NAMES.page, page);\n  }\n\n  restoreDiagram = () => {\n    const shapes = this.restoreValue(STORAGE_NAMES.shapes);\n    if (!shapes) {\n      return null;\n    }\n    const content = this.restoreValue(STORAGE_NAMES.content);\n    const page = this.restoreValue(STORAGE_NAMES.page);\n\n    return {\n      shapes,\n      content,\n      page,\n    };\n  }\n}\n\nexport default new LocalStorageUtils();\n","import MathUtils from './MathUtils';\nimport { HTML_IDS } from '../constants/layout';\n\nconst { downloadLink, uploadInput } = HTML_IDS;\n\nclass DOMUtils {\n\n  calculateLayoutClickPosition(clientX, clientY) {\n\n    const scrollableArea = document.querySelector('.area');\n    const pageHolder     = document.querySelector('#page-holder');\n\n    const { scrollLeft, scrollTop, offsetWidth: widthArea } = scrollableArea;\n    const { offsetWidth: widthPage } = pageHolder;\n\n    const areaStyle  = window.getComputedStyle(scrollableArea);\n    const paddingTop = parseInt(areaStyle['padding-top'], 10);\n    const realLeft   = (widthArea - widthPage) / 2 - 5; // 5px for scroll\n\n    const resX = scrollLeft + clientX - realLeft;\n    const resY = scrollTop + clientY - paddingTop;\n\n    return {\n      x: MathUtils.roundCoord(resX),\n      y: MathUtils.roundCoord(resY),\n    };\n  }\n\n  clickDownloadLink() {\n    const link = document.getElementById(downloadLink);\n    if (link) {\n      link.click();\n    }\n  }\n\n  clickUploadInput() {\n    const input = document.getElementById(uploadInput);\n    if (input) {\n      input.click();\n    }\n  }\n}\n\nexport default new DOMUtils();\n","import { all, takeLatest, put, call, select } from 'redux-saga/effects';\n\nimport { TYPES, STORAGE_NAMES } from '../../constants/common';\nimport { SIZE } from '../../constants/editor';\nimport { defaultPage } from '../../constants/editor';\n\nimport MathUtils from '../../utils/MathUtils';\nimport LocalStorageUtils from '../../utils/LocalStorageUtils';\nimport DOMUtils from '../../utils/DOMUtils';\nimport { cloneDeep, unset } from '../../utils/lodash';\n\nimport appActions from '../app/actions';\nimport diagramActions from './actions';\nimport { rebuildTouchedCurves, readUploadedFile } from '../generators';\nimport { selectShapes, selectContent, selectShape } from './selectors';\n\nfunction selectState(state) {\n  const { App } = state;\n  const { activeShapeID, page } = App;\n\n  return {\n    activeShapeID,\n    page,\n    activeShape : selectShape(activeShapeID)(state),\n    shapes      : selectShapes(state),\n    content     : selectContent(state),\n  };\n}\n\n// Diagram -----------------------------------------------------------------------------------------\nfunction* diagramStore() {\n  const { shapes, content, page } = yield select(selectState);\n  yield call(LocalStorageUtils.storeDiagram, shapes, content, page);\n}\n\nfunction* diagramRestore() {\n\n  const diagram = yield call(LocalStorageUtils.restoreDiagram);\n  const shapes  = diagram ? diagram.shapes  : {};\n  const content = diagram ? diagram.content : {};\n  const page    = diagram ? diagram.page    : defaultPage;\n\n  yield put(appActions.pageDataSet(page));\n  yield put(diagramActions.contentSet(content));\n  yield put(diagramActions.shapesSet(shapes));\n}\n\nfunction* diagramDownload() {\n  const { shapes, content, page } = yield select(selectState);\n  const data = {\n    [STORAGE_NAMES.shapes]  : shapes,\n    [STORAGE_NAMES.content] : content,\n    [STORAGE_NAMES.page]    : page,\n  };\n\n  yield put(diagramActions.downloadDataUpdate(data));\n}\n\nfunction* diagramReset() {\n  yield put(appActions.activeShapeIDSet(''));\n  yield put(diagramActions.contentSet({}));\n  yield put(diagramActions.shapesSet({}));\n}\n\n// Start / Finish operations -----------------------------------------------------------------------\nfunction* downloadStart() {\n  yield call(DOMUtils.clickDownloadLink);\n}\n\nfunction* uploadFileSelect() {\n  yield call(DOMUtils.clickUploadInput);\n}\n\nfunction* uploadStart({ payload }) {\n  const { file } = payload;\n  if (!file) {\n    return;\n  }\n  try {\n    const data    = yield call(readUploadedFile, file);\n    const shapes  = data[STORAGE_NAMES.shapes];\n    const content = data[STORAGE_NAMES.content];\n    const page    = data[STORAGE_NAMES.page];\n\n    yield put(appActions.pageDataSet(page));\n    yield put(diagramActions.contentSet(content));\n    yield put(diagramActions.shapesSet(shapes));\n    \n  } catch (e) {\n    console.error(e);\n  }\n}\n\n// Shapes ------------------------------------------------------------------------------------------\nfunction* shapeSetColor({ payload }) {\n\n  const { id, color } = payload;\n  const resShape = {\n    bg: color,\n  };\n\n  yield put(diagramActions.shapeUpdate(id, resShape));\n}\n\nfunction* shapeSetAlignment({ payload }) {\n\n  const { id, align } = payload;\n  const resShape = { align };\n\n  yield put(diagramActions.shapeUpdate(id, resShape));\n}\n\nfunction* shapeSetDashed({ payload }) {\n\n  const { id, dashed } = payload;\n  const resShape = { dashed };\n\n  yield put(diagramActions.shapeUpdate(id, resShape));\n}\n\nfunction* shapeSetNoBorder({ payload }) {\n\n  const { id, noBorder } = payload;\n  const resShape = { noBorder };\n\n  yield put(diagramActions.shapeUpdate(id, resShape));\n}\n\nfunction* shapeSetTextBold({ payload }) {\n\n  const { id } = payload;\n  const { activeShape } = yield select(selectState);\n\n  const resShape = {\n    textBold: !activeShape.textBold,\n  };\n\n  yield put(diagramActions.shapeUpdate(id, resShape));\n}\n\nfunction* shapeSetTextSize({ payload }) {\n\n  const { id } = payload;\n  const { activeShape } = yield select(selectState);\n  const { textSize } = activeShape;\n\n  let resTextSize = SIZE.md;\n  if (textSize === SIZE.md) { resTextSize = SIZE.sm; }\n  if (textSize === SIZE.sm) { resTextSize = SIZE.lg; }\n  if (textSize === SIZE.lg) { resTextSize = SIZE.md; }\n\n  const resShape = { textSize: resTextSize };\n\n  yield put(diagramActions.shapeUpdate(id, resShape));\n}\n\nfunction* shapeRemove({ payload }) {\n\n  const { id } = payload;\n  const { shapes, content } = yield select(selectState);\n\n  const resShapes  = cloneDeep(shapes);\n  const resContent = cloneDeep(content);\n\n  unset(resShapes, id);\n  unset(resContent, id);\n\n  yield put(diagramActions.shapesSet(resShapes));\n  yield put(diagramActions.contentSet(resContent));\n  yield put(appActions.activeShapeIDSet(''));\n}\n\nfunction* shapeMove({ payload }) {\n  const { id, movementX, movementY } = payload;\n  const { activeShape } = yield select(selectState);\n\n  const newPosition = MathUtils.calculateMoving(activeShape, movementX, movementY);\n  yield put(diagramActions.shapeUpdate(id, newPosition));\n\n  if (activeShape.type !== TYPES.curve) {\n    yield call(rebuildTouchedCurves, id);\n  }\n}\n\nfunction* shapeResize({ payload }) {\n  const { id, movementX, movementY, controlID } = payload;\n  const { activeShape } = yield select(selectState);\n\n  const newPosition = MathUtils.calculateResize(activeShape, movementX, movementY, controlID);\n  yield put(diagramActions.shapeUpdate(id, newPosition));\n\n  if (activeShape.type === TYPES.box) {\n    yield call(rebuildTouchedCurves, id);\n  }\n}\n\nexport default function* diagramSaga() {\n  yield all([\n    takeLatest(diagramActions.DIAGRAM_STORE, diagramStore),\n    takeLatest(diagramActions.DIAGRAM_RESTORE, diagramRestore),\n    takeLatest(diagramActions.DIAGRAM_DOWNLOAD, diagramDownload),\n    takeLatest(diagramActions.DIAGRAM_RESET, diagramReset),\n\n    takeLatest(diagramActions.DOWNLOAD_START, downloadStart),\n    takeLatest(diagramActions.UPLOAD_FILE_SELECT, uploadFileSelect),\n    takeLatest(diagramActions.UPLOAD_START, uploadStart),\n\n    takeLatest(diagramActions.SHAPE_SET_COLOR, shapeSetColor),\n    takeLatest(diagramActions.SHAPE_SET_ALIGNMENT, shapeSetAlignment),\n    takeLatest(diagramActions.SHAPE_SET_DASHED, shapeSetDashed),\n    takeLatest(diagramActions.SHAPE_SET_NO_BORDER, shapeSetNoBorder),\n    takeLatest(diagramActions.SHAPE_SET_TEXT_BOLD, shapeSetTextBold),\n    takeLatest(diagramActions.SHAPE_SET_TEXT_SIZE, shapeSetTextSize),\n\n    takeLatest(diagramActions.SHAPE_REMOVE, shapeRemove),\n    takeLatest(diagramActions.SHAPE_MOVE, shapeMove),\n    takeLatest(diagramActions.SHAPE_RESIZE, shapeResize),\n  ]);\n}\n","import { all } from 'redux-saga/effects';\n\nimport appSaga from './app/saga';\nimport diagramSaga from './diagram/saga';\n\nexport default function* rootSaga() {\n  yield all([\n    appSaga(),\n    diagramSaga(),\n  ]);\n}\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport reducers from './reducers';\nimport rootSaga from './sagas';\n\nconst sagaMiddleware  = createSagaMiddleware();\nconst middlewares = [sagaMiddleware];\n\nconst composeEnhancers = process.env.NODE_ENV !== 'production'\n  && typeof window === 'object'\n  && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({})\n    : compose;\n\nconst store = createStore(\n  reducers,\n  composeEnhancers(applyMiddleware(...middlewares)),\n);\n\nsagaMiddleware.run(rootSaga);\n\nexport {\n  store,\n};\n","export const STATES = {\n  calmness      : 'calmness',\n  shapeSelected : 'shapeSelected',\n  resizingBox   : 'resizingBox',\n  resizingCurve : 'resizingCurve',\n  creating      : 'creating',\n  creatingCurve : 'creatingCurve',\n};\n\nexport const EVENTS = {\n  onMouseDown   : 'onMouseDown',\n  onMouseUp     : 'onMouseUp',\n  onMouseMove   : 'onMouseMove',\n  onClickCreate : 'onClickCreate',\n  onPressESC    : 'onPressESC',\n  onPressDelete : 'onPressDelete',\n};\n","import { TYPES } from '../../constants/common';\nimport { STATES, EVENTS } from '../../constants/machines';\nimport {\n  HTML_IDS,\n  BOX_SIZE_CONTROL_IDS,\n  CURVE_SIZE_CONTROL_IDS,\n} from '../../constants/layout';\n\nimport DOMUtils from '../DOMUtils';\n\nclass PageMachine {\n\n  constructor(actions) {\n\n    this.init        = this.init.bind(this);\n    this.dispatch    = this.dispatch.bind(this);\n    this.setState    = this.setState.bind(this);\n\n    this.state       = STATES.calmness;\n    this.actions     = actions;\n    this.transitions = this.init();\n  }\n\n  // Init machine\n  init() {\n    const { actions } = this;\n    return {\n      // Calmness\n      [STATES.calmness]: {\n        [EVENTS.onMouseDown]: (event) => {\n          const { target } = event;\n          const { id } = target;\n          if (id === HTML_IDS.page) {\n            return;\n          }\n\n          actions.activeShapeIDSet(id);\n          this.setState(STATES.shapeSelected);\n        },\n        [EVENTS.onClickCreate]: (shapeType) => {\n          if (shapeType === TYPES.curve) {\n            return;\n          }\n\n          this.setState(STATES.creating);\n        },\n      },\n\n      // Shape is selected\n      [STATES.shapeSelected]: {\n        [EVENTS.onMouseDown]: (event, activeShape) => {\n          const { target } = event;\n          const { id } = target;\n\n          if (id === HTML_IDS.page) {\n            actions.activeShapeIDSet('');\n            this.setState(STATES.calmness);\n            return;\n          }\n\n          // go to resize\n          if (BOX_SIZE_CONTROL_IDS.includes(id) || CURVE_SIZE_CONTROL_IDS.includes(id)) {\n            actions.resizeDataSet({\n              shapeID     : activeShape.id,\n              controlID   : id,\n              originShape : { ...activeShape },\n            });\n            const nextState = CURVE_SIZE_CONTROL_IDS.includes(id)\n              ? STATES.resizingCurve\n              : STATES.resizingBox;\n\n            this.setState(nextState);\n            return;\n          }\n\n          actions.activeShapeIDSet(id);\n        },\n        [EVENTS.onMouseMove]: (event, activeShape) => {\n          if (!event.buttons || event.buttons !== 1) {\n            return;\n          }\n          const { movementX, movementY } = event;\n          actions.shapeMove(activeShape.id, movementX, movementY);\n        },\n        [EVENTS.onMouseUp]: (event, activeShape) => {\n          actions.dndComplete(activeShape);\n        },\n        [EVENTS.onClickCreate]: (shapeType) => {\n          if (shapeType === TYPES.curve) {\n            this.setState(STATES.creatingCurve);\n            return;\n          }\n\n          this.setState(STATES.creating);\n        },\n        [EVENTS.onPressESC]: () => {\n          actions.activeShapeIDSet('');\n          this.setState(STATES.calmness);\n        },\n        [EVENTS.onPressDelete]: (activeShape) => {\n          // TODO: check shape type and make removing with appropriated curves\n          actions.activeShapeIDSet(''); // first we need to hide all relative controls in toolbar\n          actions.shapeRemove(activeShape.id);\n          this.setState(STATES.calmness);\n        },\n      },\n\n      // Resizing Box\n      [STATES.resizingBox]: {\n        [EVENTS.onMouseMove]: (event, activeShape, controlID) => {\n          const { movementX, movementY } = event;\n          actions.shapeResize(activeShape.id, movementX, movementY, controlID);\n        },\n        [EVENTS.onMouseUp]: () => {\n          actions.resizeComplete();\n          this.setState(STATES.shapeSelected);\n        },\n        [EVENTS.onPressESC]: () => {\n          // TODO: give back all to initial state before start resize\n          //actions.activeShapeIDSet('');\n          //this.setState(STATES.calmness);\n        },\n      },\n\n      // Resizing Curve\n      [STATES.resizingCurve]: {\n        [EVENTS.onMouseMove]: (event, activeShape, controlID) => {\n          const { movementX, movementY } = event;\n          actions.curveResize(activeShape.id, movementX, movementY, controlID);\n        },\n        [EVENTS.onMouseUp]: () => {\n          //actions.resizeComplete();\n          //this.setState(STATES.shapeSelected);\n        },\n        [EVENTS.onPressESC]: () => {\n          // TODO: give back all to initial state before start resize\n          //actions.activeShapeIDSet('');\n          //this.setState(STATES.calmness);\n        },\n      },\n\n      // Creating box or circle\n      [STATES.creating]: {\n        [EVENTS.onMouseDown]: (event) => {\n          const { target } = event;\n          const { id } = target;\n          if (id !== HTML_IDS.page) {\n            return;\n          }\n\n          const { clientX, clientY } = event;\n          const position = DOMUtils.calculateLayoutClickPosition(clientX, clientY);\n\n          actions.createComplete(position);\n          this.setState(STATES.shapeSelected);\n        },\n        [EVENTS.onPressESC]: () => {\n          actions.createDataSet({ shapeType: null });\n          this.setState(STATES.calmness);\n        },\n      },\n\n      // Creating curve\n      [STATES.creatingCurve]: {\n        [EVENTS.onMouseDown]: (event, activeShape) => {\n          const { target } = event;\n          const { id } = target;\n          if (id === activeShape.id) {\n            return;\n          }\n          if (activeShape.type === TYPES.curve) {\n            return;\n          }\n\n          actions.createCurveComplete(activeShape.id, id);\n          this.setState(STATES.shapeSelected);\n        },\n        [EVENTS.onPressESC]: () => {\n          actions.createDataSet({ shapeType: null });\n          this.setState(STATES.calmness);\n        },\n      }\n    };\n  }\n\n  dispatch(eventName, ...payload) {\n    const events = this.transitions[this.state] || {};\n    const handler = events[eventName];\n\n    if (handler) {\n      handler.apply(this, ...payload);\n    }\n  }\n\n  setState(newState) {\n    this.state = newState;\n  }\n};\n\nexport default PageMachine;\n","import { TYPES } from '../constants/common';\nimport { SIZE_CONTROLS } from '../constants/layout';\nimport { THEME } from '../constants/theme';\nimport { invert } from './lodash';\n\nconst { sizeControls } = THEME;\nconst ivertedControls = invert(SIZE_CONTROLS);\n\nclass SizeControlsUtils {\n\n  createCurveDefault = (value) => {\n    return {\n      start : value,\n      end   : value,\n    };\n  }\n\n  createBoxDefault = (value) => {\n    return {\n      top    : value,\n      bottom : value,\n      left   : value,\n      right  : value,\n    };\n  }\n\n  createColors = (shapeType) => {\n    return shapeType === TYPES.curve\n      ? this.createCurveDefault(sizeControls.inactive)\n      : this.createBoxDefault(sizeControls.inactive);\n  };\n\n  createSizes = (shapeType) => {\n    return shapeType === TYPES.curve\n      ? this.createCurveDefault(4)\n      : this.createBoxDefault(4);\n  };\n\n  createRadius = (shapeType) => {\n    return shapeType === TYPES.curve\n      ? this.createCurveDefault(0)\n      : this.createBoxDefault(0);\n  };\n\n  createStyles = (shapeType) => {\n    switch (shapeType) {\n      case TYPES.curve:\n        return {\n          start : { cursor: 'crosshair' },\n          end   : { cursor: 'crosshair' },\n        };\n      default:\n        return {\n          top    : { cursor: 'ns-resize' },\n          bottom : { cursor: 'ns-resize' },\n          left   : { cursor: 'ew-resize' },\n          right  : { cursor: 'ew-resize' },\n        };\n    }\n  }\n\n  createCurvePosition = (shape, sizes) => {\n    const { x1, y1, x2, y2 } = shape;\n    const { start, end } = sizes;\n\n    const startX = x1 - (start / 2);\n    const startY = y1 - (start / 2);\n    const endX   = x2 - (end / 2);\n    const endY   = y2 - (end / 2);\n\n    return {\n      start : { x: startX, y: startY },\n      end   : { x: endX, y: endY },\n    };\n  }\n\n  createBoxPosition = (shape, sizes) => {\n    const { x, y, width, height } = shape;\n    const { top, bottom, left, right } = sizes;\n\n    const topX    = x + (width / 2) - (top / 2);\n    const topY    = y - (top / 2);\n    const bottomX = x + (width / 2) - (bottom / 2);\n    const bottomY = y + height - (bottom / 2);\n    const leftX   = x - (left / 2);\n    const leftY   = y + (height / 2) - (left / 2);\n    const rightX  = x + width - (right / 2);\n    const rightY  = y + (height / 2) - (right / 2);\n\n    return {\n      top    : { x: topX,    y: topY },\n      bottom : { x: bottomX, y: bottomY },\n      left   : { x: leftX,   y: leftY },\n      right  : { x: rightX,  y: rightY },\n    };\n  }\n\n  createPosition = (shapeType, shape, sizes) => {\n    return shapeType === TYPES.curve\n      ? this.createCurvePosition(shape, sizes)\n      : this.createBoxPosition(shape, sizes);\n  }\n\n  detectActiveKey = (activeControl = '') => {\n    return ivertedControls[activeControl];\n  }\n\n  makeControls = (shapeType, shape, activeControl = '') => {\n    const colors    = this.createColors(shapeType);\n    const sizes     = this.createSizes(shapeType);\n    const radius    = this.createRadius(shapeType);\n    const styles    = this.createStyles(shapeType);\n    const activeKey = this.detectActiveKey(activeControl);\n\n    if (activeKey) {\n      colors[activeKey] = sizeControls.active;\n      sizes[activeKey]  = 8;\n      radius[activeKey] = 1.5;\n    }\n\n    const positions = this.createPosition(shapeType, shape, sizes);\n\n    return {\n      colors,\n      sizes,\n      radius,\n      styles,\n      positions,\n    };\n  }\n}\n\nexport default new SizeControlsUtils();\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport SizeControlsUtils from '../../utils/SizeControlsUtils';\nimport { TYPES } from '../../constants/common';\nimport { SIZE_CONTROLS } from '../../constants/layout';\n\nconst availableKeys = ['top', 'bottom', 'left', 'right'];\n\nconst BoxSizeControls = ({ shape, activeControl }) => {\n\n  const controls = SizeControlsUtils.makeControls(TYPES.box, shape, activeControl);\n  const { colors, sizes, radius, styles, positions } = controls;\n\n  const elements = availableKeys.map(key => {\n    return (\n      <rect\n        key={key}\n        id={SIZE_CONTROLS[key]}\n        x={positions[key].x}\n        y={positions[key].y}\n        width={sizes[key]}\n        height={sizes[key]}\n        fill={colors[key]}\n        stroke={colors[key]}\n        rx={radius[key]}\n        ry={radius[key]}\n        style={styles[key]}\n        pointerEvents=\"all\"\n      />\n    );\n  });\n\n  return (\n    <>\n      {elements}\n    </>\n  );\n};\n\nBoxSizeControls.propTypes = {\n  activeControl: PropTypes.string.isRequired,\n  shape: PropTypes.shape({\n    x      : PropTypes.number,\n    y      : PropTypes.number,\n    width  : PropTypes.number,\n    height : PropTypes.number,\n  }).isRequired,\n};\n\nexport default BoxSizeControls;\n","import BoxSizeControls from './BoxSizeControls';\n\nexport default BoxSizeControls;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport SizeControlsUtils from '../../utils/SizeControlsUtils';\nimport { TYPES } from '../../constants/common';\nimport { SIZE_CONTROLS } from '../../constants/layout';\n\nconst availableKeys = ['start', 'end'];\n\nconst CurveSizeControls = ({ shape, activeControl }) => {\n\n  const controls = SizeControlsUtils.makeControls(TYPES.curve, shape, activeControl);\n  const { colors, sizes, radius, styles, positions } = controls;\n\n  const elements = availableKeys.map(key => {\n    return (\n      <rect\n        key={key}\n        id={SIZE_CONTROLS[key]}\n        x={positions[key].x}\n        y={positions[key].y}\n        width={sizes[key]}\n        height={sizes[key]}\n        fill={colors[key]}\n        stroke={colors[key]}\n        rx={radius[key]}\n        ry={radius[key]}\n        style={styles[key]}\n        pointerEvents=\"all\"\n      />\n    );\n  });\n\n  return (\n    <>\n      {elements}\n    </>\n  );\n};\n\nCurveSizeControls.propTypes = {\n  activeControl: PropTypes.string.isRequired,\n  shape: PropTypes.shape({\n    x1 : PropTypes.number,\n    y1 : PropTypes.number,\n    x2 : PropTypes.number,\n    y2 : PropTypes.number,\n  }).isRequired,\n};\n\nexport default CurveSizeControls;\n","import CurveSizeControls from './CurveSizeControls';\n\nexport default CurveSizeControls;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport { connect } from 'react-redux';\n\nimport DiagramUtils from '../../utils/DiagramUtils';\nimport { THEME } from '../../constants/theme';\nimport { SIZE } from '../../constants/editor';\nimport { selectShape, selectShapeContent } from '../../redux/diagram/selectors';\nimport { selectActiveShapeID, selectResizeData } from '../../redux/app/selectors';\n\nimport { BoxSizeControls } from '../../components';\n\nconst colorInert  = THEME.bg.black;\nconst colorActive = THEME.bg.blue;\n\nconst Box = (props) => {\n  const {\n    id,\n    shape,\n    shapeContent,\n    isSelected,\n    activeControl,\n  } = props;\n\n  const { x, y, width, height, bg, noBorder, textBold, textSize } = shape;\n  const { title } = shapeContent;\n\n  const radius    = DiagramUtils.calculateBorderRadius(width, height);\n  const textProps = DiagramUtils.determineBoxTextPosition(shape, radius);\n\n  const strokeColor  = isSelected ? colorActive : colorInert;\n\n  let strokeWidth = 1;\n  if (noBorder && !isSelected) {\n    strokeWidth = 0;\n  }\n\n  const boxClassName = classnames('svg-box', {\n    'selected': isSelected,\n  });\n  const textClassName = classnames('svg-text', {\n    'selected'  : isSelected,\n    'text-sm'   : textSize === SIZE.sm,\n    'text-md'   : textSize === SIZE.md,\n    'text-lg'   : textSize === SIZE.lg,\n    'text-bold' : textBold,\n  });\n\n  return (\n    <g transform=\"translate(0.5, 0.5)\" id={id}>\n      <rect\n        id={id}\n        x={x}\n        y={y}\n        width={width}\n        height={height}\n        fill={bg}\n        stroke={strokeColor}\n        strokeWidth={strokeWidth}\n        rx={radius}\n        ry={radius}\n        className={boxClassName}\n        pointerEvents=\"all\"\n      />\n      <text\n        id={id}\n        className={textClassName}\n        {...textProps}\n      >\n        {title}\n      </text>\n      {isSelected && (\n        <BoxSizeControls\n          shape={shape}\n          activeControl={activeControl}\n        />\n      )}\n    </g>\n  );\n};\n\nBox.propTypes = {\n  id   : PropTypes.string.isRequired,\n  shape: PropTypes.shape({\n    x        : PropTypes.number,\n    y        : PropTypes.number,\n    width    : PropTypes.number,\n    height   : PropTypes.number,\n    bg       : PropTypes.string,\n    align    : PropTypes.string,\n    noBorder : PropTypes.bool,\n  }).isRequired,\n\n  shapeContent: PropTypes.shape({\n    title : PropTypes.string,\n    url   : PropTypes.string,\n    info  : PropTypes.string,\n  }).isRequired,\n\n  isSelected    : PropTypes.bool.isRequired,\n  activeControl : PropTypes.string.isRequired,\n};\n\nconst mapState = (state, props) => {\n  const { id } = props;\n  const shape         = selectShape(id)(state);\n  const shapeContent  = selectShapeContent(id)(state);\n  const resize        = selectResizeData(state);\n  const activeShapeID = selectActiveShapeID(state);\n\n  return {\n    shape,\n    shapeContent,\n    isSelected: (id === activeShapeID),\n    activeControl: resize.controlID,\n  };\n};\n\nconst Connected = connect(mapState)(Box);\nConnected.defaultProps = Box.defaultProps;\n\nexport default Connected;\n","import Box from './Box';\n\nexport default Box;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { THEME } from '../../constants/theme';\nimport { selectShape } from '../../redux/diagram/selectors';\nimport { selectActiveShapeID } from '../../redux/app/selectors';\n\nconst circleColor = THEME.bg.black;\nconst controlColor = THEME.sizeControls.inactive;\n\nconst Circle = ({ id, shape, isSelected }) => {\n\n  const { x, y, radius } = shape;\n  const style = {\n    cursor: isSelected ? 'pointer' : 'default',\n  };\n\n  const controlCoords = [\n    { x, y: y - radius },\n    { x, y: y + radius },\n    { x: x - radius, y },\n    { x: x + radius, y },\n  ];\n\n  const controls = controlCoords.map(item => (\n    <circle\n      key={`control:${item.x}-${item.y}`}\n      cx={item.x}\n      cy={item.y}\n      r={2}\n      stroke={controlColor}\n      fill={controlColor}\n    />\n  ));\n\n  return (\n    <g transform=\"translate(0.5, 0.5)\" id={id}>\n      <circle\n        id={id}\n        cx={x}\n        cy={y}\n        r={radius}\n        stroke={circleColor}\n        style={style}\n        fill=\"transparent\"\n        pointerEvents=\"all\"\n      />\n      {isSelected && (\n        <>\n          {controls}\n        </>\n      )}\n    </g>\n  );\n};\n\nCircle.propTypes = {\n  id   : PropTypes.string.isRequired,\n  shape: PropTypes.shape({\n    x      : PropTypes.number,\n    y      : PropTypes.number,\n    radius : PropTypes.number,\n  }).isRequired,\n\n  isSelected: PropTypes.bool.isRequired,\n};\n\nconst mapState = (state, props) => {\n  const { id } = props;\n  const shape         = selectShape(id)(state);\n  const activeShapeID = selectActiveShapeID(state);\n\n  return {\n    shape,\n    isSelected: (id === activeShapeID),\n  };\n};\n\nconst Connected = connect(mapState)(Circle);\nConnected.defaultProps = Circle.defaultProps;\n\nexport default Connected;\n","import Circle from './Circle';\n\nexport default Circle;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { THEME } from '../../constants/theme';\nimport { selectShape } from '../../redux/diagram/selectors';\nimport { selectActiveShapeID, selectResizeData } from '../../redux/app/selectors';\n\nimport { CurveSizeControls } from '../../components';\n\nconst colorLine     = THEME.bg.black;\nconst colorControls = THEME.sizeControls.inactive;\n\nconst Curve = (props) => {\n  const {\n    id,\n    shape,\n    isSelected,\n    activeControl,\n  } = props;\n\n  const { x1, y1, x2, y2, cpx1, cpy1, cpx2, cpy2, dashed } = shape;\n\n  const style = { cursor: 'pointer' };\n  const color = isSelected ? colorControls : colorLine;\n  const thickness = isSelected ? 2 : 1;\n\n  const path = `M ${x1} ${y1} C ${cpx1} ${cpy1}, ${cpx2} ${cpy2}, ${x2} ${y2}`;\n\n  return (\n    <g transform=\"translate(0, 0)\" id={id}>\n      <path\n        id={id}\n        d={path}\n        fill=\"transparent\"\n        stroke={color}\n        strokeDasharray={dashed ? 3 : 0}\n        strokeWidth={thickness}\n        style={style}\n        pointerEvents=\"all\"\n      />\n      {isSelected && (\n        <CurveSizeControls\n          shape={shape}\n          activeControl={activeControl}\n        />\n      )}\n    </g>\n  );\n};\n\nCurve.propTypes = {\n  id   : PropTypes.string.isRequired,\n  shape: PropTypes.shape({\n    x1        : PropTypes.number.isRequired,\n    y1        : PropTypes.number.isRequired,\n    x2        : PropTypes.number.isRequired,\n    y2        : PropTypes.number.isRequired,\n    dashed    : PropTypes.bool,\n    direction : PropTypes.string,\n  }).isRequired,\n\n  isSelected    : PropTypes.bool.isRequired,\n  activeControl : PropTypes.string.isRequired,\n};\n\nconst mapState = (state, props) => {\n  const { id } = props;\n  const shape         = selectShape(id)(state);\n  const resize        = selectResizeData(state);\n  const activeShapeID = selectActiveShapeID(state);\n\n  return {\n    shape,\n    isSelected: (id === activeShapeID),\n    activeControl: resize.controlID,\n  };\n};\n\nconst Connected = connect(mapState)(Curve);\nConnected.defaultProps = Curve.defaultProps;\n\nexport default Connected;\n","import Curve from './Curve';\n\nexport default Curve;\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\nimport PageMachine from '../../utils/Machines/PageMachine';\nimport appActions from '../../redux/app/actions';\nimport diagramActions from '../../redux/diagram/actions';\nimport { selectBoxes, selectCurves, selectCircles, selectShape } from '../../redux/diagram/selectors';\nimport {\n  selectActiveShapeID,\n  selectIsResize,\n  selectResizeData,\n  selectCreateData,\n} from '../../redux/app/selectors';\nimport { EVENTS } from '../../constants/machines';\n\nimport Box from '../Box';\nimport Circle from '../Circle';\nimport Curve from '../Curve';\n\nconst staticPageStyle = {\n  display         : 'block',\n  position        : 'absolute',\n  left            : 0,\n  top             : 0,\n  width           : '100%',\n  height          : '100%',\n  backgroundImage : 'none',\n};\n\nclass PageSVG extends PureComponent {\n\n  static propTypes = {\n    boxes            : PropTypes.array.isRequired,\n    curves           : PropTypes.array.isRequired,\n    circles          : PropTypes.array.isRequired,\n    width            : PropTypes.number.isRequired,\n    height           : PropTypes.number.isRequired,\n\n    actions: PropTypes.shape({\n      activeShapeIDSet    : PropTypes.func.isRequired,\n      resizeDataSet       : PropTypes.func.isRequired,\n      resizeComplete      : PropTypes.func.isRequired,\n      dndComplete         : PropTypes.func.isRequired,\n      createDataSet       : PropTypes.func.isRequired,\n      createComplete      : PropTypes.func.isRequired,\n      createCurveComplete : PropTypes.func.isRequired,\n      shapeUpdate         : PropTypes.func.isRequired,\n      shapeRemove         : PropTypes.func.isRequired,\n      shapeMove           : PropTypes.func.isRequired,\n      shapeResize         : PropTypes.func.isRequired,\n      curveResize         : PropTypes.func.isRequired,\n    }).isRequired,\n\n    activeShapeID    : PropTypes.string,\n    resizeControlID  : PropTypes.string,\n    createShapeType  : PropTypes.string,\n    isResize         : PropTypes.bool,\n    isCreate         : PropTypes.bool,\n\n    activeShape: PropTypes.shape({\n      x      : PropTypes.number,\n      y      : PropTypes.number,\n      width  : PropTypes.number,\n      height : PropTypes.number,\n    }),\n  };\n\n  static defaultProps = {\n    activeShapeID   : '',\n    resizeControlID : '',\n    isResize        : false,\n    isCreate        : false,\n    activeShape     : {},\n  };\n\n  constructor(props) {\n    super(props);\n    this.onMouseDown   = this.onMouseDown.bind(this);\n    this.onMouseMove   = this.onMouseMove.bind(this);\n    this.onMouseUp     = this.onMouseUp.bind(this);\n    this.onKeyDown     = this.onKeyDown.bind(this);\n    this.renderBoxes   = this.renderBoxes.bind(this);\n    this.renderCircles = this.renderCircles.bind(this);\n    this.renderCurves  = this.renderCurves.bind(this);\n\n    this.machine = new PageMachine(props.actions);\n  }\n\n  componentDidMount() {\n    document.addEventListener('keydown', this.onKeyDown);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keydown', this.onKeyDown);\n  }\n\n  componentDidUpdate(prevProps) {\n    const { machine } = this;\n    const { isCreate, createShapeType } = this.props;\n    if (isCreate && !prevProps.isCreate) {\n      machine.dispatch(EVENTS.onClickCreate, [createShapeType]);\n    }\n  }\n\n  onMouseDown(event) {\n    const { machine } = this;\n    const { activeShape } = this.props;\n\n    machine.dispatch(EVENTS.onMouseDown, [event, activeShape]);\n  }\n\n  onMouseMove(event) {\n    const { machine } = this;\n    const { activeShape, resizeControlID } = this.props;\n\n    machine.dispatch(EVENTS.onMouseMove, [event, activeShape, resizeControlID]);\n  }\n\n  onMouseUp(event) {\n    const { machine } = this;\n    const { activeShape } = this.props;\n\n    machine.dispatch(EVENTS.onMouseUp, [event, activeShape]);\n  }\n\n  onKeyDown(event) {\n    const { machine } = this;\n    const { activeShape } = this.props;\n    const { keyCode } = event;\n\n    // ESC\n    if (keyCode === 27) {\n      machine.dispatch(EVENTS.onPressESC);\n\n    // Delete\n    } else if (keyCode === 46) {\n      machine.dispatch(EVENTS.onPressDelete, [activeShape]);\n    }\n  }\n\n  renderBoxes() {\n    const { boxes } = this.props;\n\n    return boxes.map(box => (\n      <Box\n        key={box.id}\n        id={box.id}\n      />\n    ));\n  }\n\n  renderCircles() {\n    const { circles } = this.props;\n\n    return circles.map(circle => (\n      <Circle\n        key={circle.id}\n        id={circle.id}\n      />\n    ));\n  }\n\n  renderCurves() {\n    const { curves } = this.props;\n\n    return curves.map(curve => (\n      <Curve\n        id={curve.id}\n        key={curve.id}\n      />\n    ));\n  }\n\n  render() {\n    const { width, height, isCreate } = this.props;\n\n    const style = {\n      ...staticPageStyle,\n      minWidth  : width,\n      minHeight : height,\n      cursor    : isCreate ? 'crosshair' : 'default',\n    };\n\n    const boxes   = this.renderBoxes();\n    const circles = this.renderCircles();\n    const curves  = this.renderCurves();\n\n    return (\n      <svg\n        id=\"page\"\n        style={style}\n        onMouseDown={this.onMouseDown}\n        onMouseMove={this.onMouseMove}\n        onMouseUp={this.onMouseUp}\n      >\n        {boxes}\n        {circles}\n        {curves}\n      </svg>\n    );\n  }\n}\n\nconst mapState = (state) => {\n  const boxes         = selectBoxes(state);\n  const circles       = selectCircles(state);\n  const curves        = selectCurves(state);\n  const activeShapeID = selectActiveShapeID(state);\n  const resizeData    = selectResizeData(state);\n  const createData    = selectCreateData(state);\n\n  return {\n    boxes,\n    curves,\n    circles,\n    activeShapeID,\n    activeShape     : selectShape(activeShapeID)(state),\n    isResize        : selectIsResize(state),\n    resizeControlID : resizeData.controlID,\n    isCreate        : Boolean(createData.shapeType),\n    createShapeType : createData.shapeType,\n  };\n};\n\nconst mapActions = (dispatch) => {\n\n  return {\n    actions: bindActionCreators({\n      activeShapeIDSet    : appActions.activeShapeIDSet,\n      resizeDataSet       : appActions.resizeDataSet,\n      resizeComplete      : appActions.resizeComplete,\n      dndComplete         : appActions.dndComplete,\n      createDataSet       : appActions.createDataSet,\n      createComplete      : appActions.createComplete,\n      createCurveComplete : appActions.createCurveComplete,\n      shapeUpdate         : diagramActions.shapeUpdate,\n      shapeRemove         : diagramActions.shapeRemove,\n      shapeMove           : diagramActions.shapeMove,\n      shapeResize         : diagramActions.shapeResize,\n      curveResize         : diagramActions.curveResize,\n    }, dispatch),\n  };\n};\n\nconst Connected = connect(mapState, mapActions)(PageSVG);\nConnected.defaultProps = PageSVG.defaultProps;\n\nexport default Connected;\n","import PageSVG from './PageSVG';\n\nexport default PageSVG;\n","import styled from 'styled-components';\nimport { THEME } from '../../constants/theme';\nimport { TEXT_SIZE } from '../../constants/editor';\n\nconst { bg } = THEME;\n\nexport const Wrapper = styled.div`\n  display: block;\n  position: relative;\n  background-color: ${bg.white};\n  background-size: 10px 10px;\n  background-image: linear-gradient(to right, rgb(216, 216, 216) 1px, transparent 1px),\n                    linear-gradient(to bottom, rgb(216, 216, 216) 1px, transparent 1px);\n  box-shadow: 3px 3px 3px 1px ${bg.grey};\n  \n  svg {\n    .svg-box {\n      cursor: default;\n          \n      &.selected {\n        cursor:pointer;\n      }\n    }\n    \n    .svg-text {\n      cursor: default;\n      font-size: ${TEXT_SIZE.md};\n      font-weight: normal;\n      \n      &.text-sm {\n        font-size: ${TEXT_SIZE.sm};\n      }\n      &.text-md {\n        font-size: ${TEXT_SIZE.md};\n      }\n      &.text-lg {\n        font-size: ${TEXT_SIZE.lg};\n      }\n      &.text-bold {\n        font-weight: 500;\n      }\n      &.selected {\n        cursor:pointer;\n      }\n    }\n  }\n`;\n","import React, { useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { autoSaveInterval } from '../../config';\n\nimport diagramActions from '../../redux/diagram/actions';\nimport { selectPageData } from '../../redux/app/selectors';\nimport { PAGE } from '../../constants/editor';\n\nimport PageSVG from '../PageSVG';\nimport { Wrapper } from './Layout.style';\n\nconst Layout = ({ width, height, diagramStore, diagramRestore }) => {\n\n  const style = {\n    width,\n    height,\n  };\n\n  const ref = useRef({ interval: null });\n\n  useEffect(() => {\n    diagramRestore();\n    ref.current.interval = setInterval(() => {\n      diagramStore();\n    }, autoSaveInterval);\n\n    return () => {\n      clearInterval(ref.current.interval);\n    };\n  }, []);\n\n  return (\n    <Wrapper id=\"page-holder\" style={style}>\n      <PageSVG width={width} height={height} />\n    </Wrapper>\n  );\n};\n\nLayout.propTypes = {\n  width          : PropTypes.number,\n  height         : PropTypes.number,\n  diagramStore   : PropTypes.func.isRequired,\n  diagramRestore : PropTypes.func.isRequired,\n};\n\nLayout.defaultProps = {\n  width  : PAGE.width,\n  height : PAGE.height,\n};\n\nconst mapState = (state) => {\n  const { width, height } = selectPageData(state);\n\n  return {\n    width,\n    height,\n  };\n};\n\nconst mapActions = {\n  diagramStore   : diagramActions.diagramStore,\n  diagramRestore : diagramActions.diagramRestore,\n};\n\nconst Connected = connect(mapState, mapActions)(Layout);\nConnected.defaultProps = Layout.defaultProps;\n\nexport default Connected;\n","import Layout from './Layout';\n\nexport default Layout;\n","import styled from 'styled-components';\nimport { THEME } from '../../constants/theme';\n\nconst { border, font } = THEME;\n\nexport const Wrapper = styled.div`\n  padding: 8px 0;\n  border-bottom: ${border.toolbar};\n\n  &.noBorder {\n    border-bottom: none;\n  }\n\n  .title {\n    font-size: ${font.label};\n    font-weight: 500;\n    margin-bottom: 8px;\n  }\n\n  .content {\n    width: 100%;\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nimport { Wrapper } from './ToolbarRow.style';\n\nconst ToolbarRow = ({ title, noBorder, children }) => {\n\n  const className = classnames({\n    noBorder,\n  });\n\n  return (\n    <Wrapper className={className}>\n      {title && <div className=\"title\">{title}</div>}\n      <div className=\"content\">\n        {children}\n      </div>\n    </Wrapper>\n  );\n};\n\nToolbarRow.propTypes = {\n  title   : PropTypes.string,\n  noBorder: PropTypes.bool,\n  children: PropTypes.oneOfType([\n    PropTypes.node,\n    PropTypes.arrayOf(PropTypes.node),\n  ]),\n};\n\nToolbarRow.defaultProps = {\n  title    : null,\n  noBorder : false,\n  children : null,\n};\n\nexport default ToolbarRow;\n","import ToolbarRow from './ToolbarRow';\n\nexport default ToolbarRow;\n","import styled from 'styled-components';\nimport { THEME } from '../../constants/theme';\n\nconst { bg, border, color } = THEME;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 36px;\n  height: 36px;\n  border: ${border.button};\n  border-radius: ${border.smallRadius};\n  margin-right: 8px;\n  cursor: pointer;\n  background-color: ${bg.white};\n\n  &:hover {\n    border-color: ${bg.blue};\n    color: ${bg.blue};\n  }\n\n  &.last {\n    margin-right: 0;\n  }\n\n  &.red {\n    color: ${color.red};\n    border-color: ${color.red};\n    &:hover {\n      border-color: ${color.red};\n    }\n  }\n\n  &.bg-yellow {\n    background-color: ${bg.yellow};\n  }\n  &.bg-red {\n    background-color: ${bg.red};\n  }\n  &.bg-grey {\n    background-color: ${bg.grey};\n  }\n  &.bg-softBlue {\n    background-color: ${bg.softBlue};\n  }\n  &.bg-green {\n    background-color: ${bg.green};\n  }\n  \n  &.disabled {\n    opacity: .5;\n    &:hover {\n      border-color: inherit;\n      color: inherit;\n    }\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nimport { Wrapper } from './ToolbarButton.style';\n\nconst ToolbarButton = ({ id, title, className, disabled, children, onClick }) => {\n\n  const wrapperClass = classnames(className, {\n    disabled,\n  });\n\n  const onClickHandler = disabled\n    ? () => {}\n    : onClick;\n\n  return (\n    <Wrapper\n      title={title}\n      className={wrapperClass}\n      onClick={() => onClickHandler(id)}\n    >\n      {children}\n    </Wrapper>\n  );\n};\n\nToolbarButton.propTypes = {\n  id      : PropTypes.PropTypes.string.isRequired,\n  children: PropTypes.oneOfType([\n    PropTypes.node,\n    PropTypes.arrayOf(PropTypes.node),\n  ]),\n  title     : PropTypes.string,\n  className : PropTypes.string,\n  disabled  : PropTypes.bool,\n  onClick   : PropTypes.func,\n};\n\nToolbarButton.defaultProps = {\n  title     : '',\n  className : null,\n  disabled  : false,\n  children  : null,\n  onClick   : () => {},\n};\n\nexport default ToolbarButton;\n","import ToolbarButton from './ToolbarButton';\n\nexport default ToolbarButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Icon from '@daminort/react-feather-icons';\n\nconst AlignCenter = ({ size }) => {\n  return (\n    <Icon\n      name=\"alignCenter\"\n      size={size}\n    />\n  );\n};\n\nAlignCenter.propTypes = {\n  size: PropTypes.number,\n};\n\nAlignCenter.defaultProps = {\n  size: 16,\n};\n\nexport default AlignCenter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Icon from '@daminort/react-feather-icons';\n\nconst AlignLeft = ({ size }) => {\n  return (\n    <Icon\n      name=\"alignLeft\"\n      size={size}\n    />\n  );\n};\n\nAlignLeft.propTypes = {\n  size: PropTypes.number,\n};\n\nAlignLeft.defaultProps = {\n  size: 16,\n};\n\nexport default AlignLeft;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Icon from '@daminort/react-feather-icons';\n\nconst AlignRight = ({ size }) => {\n  return (\n    <Icon\n      name=\"alignRight\"\n      size={size}\n    />\n  );\n};\n\nAlignRight.propTypes = {\n  size: PropTypes.number,\n};\n\nAlignRight.defaultProps = {\n  size: 16,\n};\n\nexport default AlignRight;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Icon from '@daminort/react-feather-icons';\n\nconst ClearAll = ({ size }) => {\n  return (\n    <Icon\n      name=\"fileX\"\n      size={size}\n    />\n  );\n};\n\nClearAll.propTypes = {\n  size: PropTypes.number,\n};\n\nClearAll.defaultProps = {\n  size: 16,\n};\n\nexport default ClearAll;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Icon from '@daminort/react-feather-icons';\n\nconst Download = ({ size }) => {\n  return (\n    <Icon\n      name=\"download\"\n      size={size}\n    />\n  );\n};\n\nDownload.propTypes = {\n  size: PropTypes.number,\n};\n\nDownload.defaultProps = {\n  size: 16,\n};\n\nexport default Download;\n","export const svgProps = {\n  xmlns   : 'http://www.w3.org/2000/svg',\n  viewBox : '0 0 24 24',\n  fill    : 'none',\n};\n\nexport const commonProps = {\n  stroke         : 'currentColor',\n  strokeWidth    : 2,\n  strokeLinecap  : 'round',\n  strokeLinejoin : 'round',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { svgProps, commonProps } from './props';\n\nconst lineProps = {\n  x1: 1,\n  y1: 1,\n  x2: 23,\n  y2: 23,\n  stroke: commonProps.stroke,\n};\n\nconst Line = ({ size, dotted, dashed, ...restProps }) => {\n\n  let strokeDasharray = 0;\n  if (dotted || dashed) {\n    strokeDasharray = dotted ? 4 : 6;\n  }\n\n  const strokeWidth = dotted ? 1 : 3;\n\n  return (\n    <svg\n      {...svgProps}\n      {...commonProps}\n      width={size}\n      height={size}\n      strokeWidth={strokeWidth}\n      {...restProps}\n    >\n      <line {...lineProps} strokeDasharray={strokeDasharray} />\n    </svg>\n  );\n};\n\nLine.propTypes = {\n  size   : PropTypes.number,\n  dotted : PropTypes.bool,\n  dashed : PropTypes.bool,\n};\n\nLine.defaultProps = {\n  size   : 16,\n  dotted : false,\n  dashed : false,\n};\n\nexport default Line;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Line from './Line';\n\nconst iconClassName = 'feather feather-line-dashed';\n\nconst LineDashed = ({ size, ...restProps }) => {\n\n  return (\n    <Line\n      dashed\n      size={size}\n      className={iconClassName}\n      {...restProps}\n    />\n  );\n};\n\nLineDashed.propTypes = {\n  size: PropTypes.number,\n};\n\nLineDashed.defaultProps = {\n  size: 16,\n};\n\nexport default LineDashed;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Line from './Line';\n\nconst iconClassName = 'feather feather-line-dotted';\n\nconst LineDotted = ({ size, ...restProps }) => {\n\n  return (\n    <Line\n      dotted\n      size={size}\n      className={iconClassName}\n      {...restProps}\n    />\n  );\n};\n\nLineDotted.propTypes = {\n  size: PropTypes.number,\n};\n\nLineDotted.defaultProps = {\n  size: 16,\n};\n\nexport default LineDotted;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Line from './Line';\n\nconst iconClassName = 'feather feather-line-solid';\n\nconst LineSolid = ({ size, ...restProps }) => {\n\n  return (\n    <Line\n      size={size}\n      className={iconClassName}\n      {...restProps}\n    />\n  );\n};\n\nLineSolid.propTypes = {\n  size: PropTypes.number,\n};\n\nLineSolid.defaultProps = {\n  size: 16,\n};\n\nexport default LineSolid;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Icon from '@daminort/react-feather-icons';\n\nconst NewBox = ({ size }) => {\n  return (\n    <Icon\n      name=\"square\"\n      size={size}\n    />\n  );\n};\n\nNewBox.propTypes = {\n  size: PropTypes.number,\n};\n\nNewBox.defaultProps = {\n  size: 16,\n};\n\nexport default NewBox;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Icon from '@daminort/react-feather-icons';\n\nconst NewCircle = ({ size }) => {\n  return (\n    <Icon\n      name=\"circle\"\n      size={size}\n    />\n  );\n};\n\nNewCircle.propTypes = {\n  size: PropTypes.number,\n};\n\nNewCircle.defaultProps = {\n  size: 16,\n};\n\nexport default NewCircle;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { svgProps, commonProps } from './props';\n\nconst iconClassName = 'feather feather-curve-new';\n\nconst NewLine = ({ size, ...restProps }) => {\n\n  return (\n    <svg\n      {...svgProps}\n      {...commonProps}\n      width={size}\n      height={size}\n      strokeWidth={3}\n      className={iconClassName}\n      {...restProps}\n    >\n      <path d=\"M 1 23 C 7 7, 17 17, 23 1\" />\n    </svg>\n  );\n};\n\nNewLine.propTypes = {\n  size: PropTypes.number,\n};\n\nNewLine.defaultProps = {\n  size: 16,\n};\n\nexport default NewLine;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Icon from '@daminort/react-feather-icons';\n\nconst Save = ({ size }) => {\n  return (\n    <Icon\n      name=\"save\"\n      size={size}\n    />\n  );\n};\n\nSave.propTypes = {\n  size: PropTypes.number,\n};\n\nSave.defaultProps = {\n  size: 16,\n};\n\nexport default Save;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Icon from '@daminort/react-feather-icons';\n\nconst TextBold = ({ size }) => {\n  return (\n    <Icon\n      name=\"bold\"\n      size={size}\n    />\n  );\n};\n\nTextBold.propTypes = {\n  size: PropTypes.number,\n};\n\nTextBold.defaultProps = {\n  size: 16,\n};\n\nexport default TextBold;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Icon from '@daminort/react-feather-icons';\n\nconst TextSize = ({ size }) => {\n  return (\n    <Icon\n      name=\"type\"\n      size={size}\n    />\n  );\n};\n\nTextSize.propTypes = {\n  size: PropTypes.number,\n};\n\nTextSize.defaultProps = {\n  size: 16,\n};\n\nexport default TextSize;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Icon from '@daminort/react-feather-icons';\n\nconst Trash = ({ size }) => {\n  return (\n    <Icon\n      name=\"trash2\"\n      size={size}\n    />\n  );\n};\n\nTrash.propTypes = {\n  size: PropTypes.number,\n};\n\nTrash.defaultProps = {\n  size: 16,\n};\n\nexport default Trash;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Icon from '@daminort/react-feather-icons';\n\nconst Upload = ({ size }) => {\n  return (\n    <Icon\n      name=\"upload\"\n      size={size}\n    />\n  );\n};\n\nUpload.propTypes = {\n  size: PropTypes.number,\n};\n\nUpload.defaultProps = {\n  size: 16,\n};\n\nexport default Upload;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport ToolbarButton from '../../../components/ToolbarButton';\nimport { Save, Upload, Download, ClearAll } from '../../../icons';\n\nimport diagramActions from '../../../redux/diagram/actions';\n\nconst Actions = ({ diagramStore, diagramDownload, diagramReset, uploadFileSelect }) => {\n\n  return (\n    <div className=\"left-right\">\n      <div className=\"left\">\n        <ToolbarButton\n          id=\"actionSave\"\n          title=\"Save Diagram\"\n          onClick={() => diagramStore()}\n        >\n          <Save />\n        </ToolbarButton>\n        <ToolbarButton\n          id=\"actionDownload\"\n          title=\"Download Diagram\"\n          onClick={() => diagramDownload()}\n        >\n          <Download />\n        </ToolbarButton>\n        <ToolbarButton\n          id=\"actionUpload\"\n          title=\"Upload Diagram\"\n          onClick={() => uploadFileSelect()}\n        >\n          <Upload />\n        </ToolbarButton>\n      </div>\n      <div className=\"right\">\n        <ToolbarButton\n          id=\"actionClearAll\"\n          title=\"Clear diagram\"\n          className=\"last red\"\n          onClick={() => diagramReset()}\n        >\n          <ClearAll />\n        </ToolbarButton>\n      </div>\n    </div>\n  );\n};\n\nActions.propTypes = {\n  diagramStore     : PropTypes.func.isRequired,\n  diagramDownload  : PropTypes.func.isRequired,\n  diagramReset     : PropTypes.func.isRequired,\n  uploadFileSelect : PropTypes.func.isRequired,\n};\n\nconst mapActions = {\n  diagramStore     : diagramActions.diagramStore,\n  diagramDownload  : diagramActions.diagramDownload,\n  diagramReset     : diagramActions.diagramReset,\n  uploadFileSelect : diagramActions.uploadFileSelect,\n};\n\nexport default connect(null, mapActions)(Actions);\n","import Actions from './Actions';\n\nexport default Actions;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport ToolbarButton from '../../../components/ToolbarButton';\nimport {\n  AlignCenter,\n  AlignLeft,\n  AlignRight,\n  LineDashed,\n  LineDotted,\n  LineSolid,\n  TextBold,\n  TextSize,\n} from '../../../icons';\n\nimport diagramActions from '../../../redux/diagram/actions';\nimport { selectActiveShapeID } from '../../../redux/app/selectors';\nimport { ALIGN } from '../../../constants/editor';\n\nconst Appearance = (props) => {\n  const {\n    activeShapeID,\n    isBox,\n    isCurve,\n    shapeSetAlignment,\n    shapeSetDashed,\n    shapeSetNoBorder,\n    shapeSetTextBold,\n    shapeSetTextSize,\n  } = props;\n\n  const onClickAlign = (id) => {\n    shapeSetAlignment(activeShapeID, id);\n  };\n\n  const onClickLine = (dashed) => {\n    shapeSetDashed(activeShapeID, dashed);\n  };\n\n  const onClickBorder = (noBorder) => {\n    shapeSetNoBorder(activeShapeID, noBorder);\n  };\n\n  const showAlignment = isBox;\n  const showLines     = isCurve;\n  const showBorders   = isBox;\n\n  return (\n    <div className=\"left-right\">\n      <div className=\"left\">\n        {showAlignment && (\n          <>\n            <ToolbarButton\n              id=\"textBold\"\n              title=\"Text weight: Normal/Bold\"\n              onClick={() => shapeSetTextBold(activeShapeID)}\n            >\n              <TextBold />\n            </ToolbarButton>\n            <ToolbarButton\n              id=\"TextSize\"\n              title=\"Text size: sm / md / lg\"\n              onClick={() => shapeSetTextSize(activeShapeID)}\n            >\n              <TextSize />\n            </ToolbarButton>\n            <ToolbarButton\n              id={ALIGN.left}\n              title=\"Left\"\n              onClick={onClickAlign}\n            >\n              <AlignLeft />\n            </ToolbarButton>\n            <ToolbarButton\n              id={ALIGN.center}\n              title=\"Center\"\n              onClick={onClickAlign}\n            >\n              <AlignCenter />\n            </ToolbarButton>\n            <ToolbarButton\n              id={ALIGN.right}\n              title=\"Right\"\n              onClick={onClickAlign}\n            >\n              <AlignRight />\n            </ToolbarButton>\n          </>\n        )}\n        {showBorders && (\n          <>\n            <ToolbarButton\n              id=\"borderSolid\"\n              title=\"Border: Solid\"\n              onClick={() => onClickBorder(false)}\n            >\n              <LineSolid />\n            </ToolbarButton>\n            <ToolbarButton\n              id=\"borderNo\"\n              title=\"Border: No\"\n              onClick={() => onClickBorder(true)}\n            >\n              <LineDotted />\n            </ToolbarButton>\n          </>\n        )}\n        {showLines && (\n          <>\n            <ToolbarButton\n              id=\"lineSolid\"\n              title=\"Line: Solid\"\n              onClick={() => onClickLine(false)}\n            >\n              <LineSolid />\n            </ToolbarButton>\n            <ToolbarButton\n              id=\"lineDashed\"\n              title=\"Line: Dashed\"\n              onClick={() => onClickLine(true)}\n            >\n              <LineDashed />\n            </ToolbarButton>\n          </>\n        )}\n      </div>\n    </div>\n  );\n};\n\nAppearance.propTypes = {\n  activeShapeID     : PropTypes.string.isRequired,\n  isBox             : PropTypes.bool.isRequired,\n  isCurve           : PropTypes.bool.isRequired,\n  shapeSetAlignment : PropTypes.func.isRequired,\n  shapeSetDashed    : PropTypes.func.isRequired,\n  shapeSetNoBorder  : PropTypes.func.isRequired,\n  shapeSetTextBold  : PropTypes.func.isRequired,\n  shapeSetTextSize  : PropTypes.func.isRequired,\n};\n\nconst mapState = (state) => {\n  return {\n    activeShapeID: selectActiveShapeID(state),\n  };\n};\n\nconst mapActions = {\n  shapeSetAlignment : diagramActions.shapeSetAlignment,\n  shapeSetDashed    : diagramActions.shapeSetDashed,\n  shapeSetNoBorder  : diagramActions.shapeSetNoBorder,\n  shapeSetTextBold  : diagramActions.shapeSetTextBold,\n  shapeSetTextSize  : diagramActions.shapeSetTextSize,\n};\n\nexport default connect(mapState, mapActions)(Appearance);\n","import Appearance from './Appearance';\n\nexport default Appearance;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport ToolbarButton from '../../../components/ToolbarButton';\n\nimport diagramActions from '../../../redux/diagram/actions';\nimport { selectActiveShapeID } from '../../../redux/app/selectors';\nimport { THEME } from '../../../constants/theme';\n\nconst classes = {\n  colorTransparent : 'bg-white',\n  colorYellow      : 'bg-yellow',\n  colorRed         : 'bg-red',\n  colorGrey        : 'bg-grey',\n  colorBlue        : 'bg-softBlue',\n  colorGreen       : 'bg-green',\n};\n\nconst { bg } = THEME;\nconst bgColors = {\n  colorTransparent : bg.transparent,\n  colorYellow      : bg.yellow,\n  colorRed         : bg.red,\n  colorGrey        : bg.grey,\n  colorBlue        : bg.softBlue,\n  colorGreen       : bg.green,\n};\n\nconst Colors = ({ isShapeSelected, activeShapeID, shapeSetColor }) => {\n\n  const onClick = (id) => {\n    if (!isShapeSelected) {\n      return;\n    }\n    shapeSetColor(activeShapeID, bgColors[id]);\n  };\n\n  return (\n    <div className=\"left-right\">\n      <div className=\"left\">\n        <ToolbarButton\n          id=\"colorTransparent\"\n          title=\"Transparent\"\n          className={classes.colorTransparent}\n          onClick={onClick}\n        />\n        <ToolbarButton\n          id=\"colorYellow\"\n          title=\"Yellow\"\n          className={classes.colorYellow}\n          onClick={onClick}\n        />\n        <ToolbarButton\n          id=\"colorRed\"\n          title=\"Red\"\n          className={classes.colorRed}\n          onClick={onClick}\n        />\n        <ToolbarButton\n          id=\"colorBlue\"\n          title=\"Blue\"\n          className={classes.colorBlue}\n          onClick={onClick}\n        />\n        <ToolbarButton\n          id=\"colorGreen\"\n          title=\"Green\"\n          className={classes.colorGreen}\n          onClick={onClick}\n        />\n        <ToolbarButton\n          id=\"colorGrey\"\n          title=\"Grey\"\n          className={classes.colorGrey}\n          onClick={onClick}\n        />\n      </div>\n    </div>\n  );\n};\n\nColors.propTypes = {\n  activeShapeID   : PropTypes.string.isRequired,\n  isShapeSelected : PropTypes.bool.isRequired,\n  shapeSetColor   : PropTypes.func.isRequired,\n};\n\nconst mapState = (state) => {\n  const activeShapeID = selectActiveShapeID(state);\n\n  return {\n    activeShapeID,\n    isShapeSelected: Boolean(activeShapeID),\n  };\n};\n\nconst mapActions = {\n  shapeSetColor: diagramActions.shapeSetColor,\n};\n\nexport default connect(mapState, mapActions)(Colors);\n","import Colors from './Colors';\n\nexport default Colors;\n","import Button from './Button';\n\nexport default Button;\n","import { Button } from 'primereact/button';\n\nexport default Button;\n","import InputNumber from './InputNumber';\n\nexport default InputNumber;\n","import { Spinner } from 'primereact/spinner';\n\nexport default Spinner;\n","import InputText from './InputText';\n\nexport default InputText;\n","import { InputText } from 'primereact/inputtext';\n\nexport default InputText;\n","import InputTextarea from './InputTextarea';\n\nexport default InputTextarea;\n","import { InputTextarea } from 'primereact/inputtextarea';\n\nexport default InputTextarea;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  width: 100%;\n\n  .p-inputtext {\n    width: 100%;\n    margin-bottom: 8px;\n    font-size: inherit;\n  }\n\n  .p-button {\n    font-size: inherit;\n  }\n`;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { InputText, InputTextarea, Button } from '../../../components/Prime';\n\nimport diagramActions from '../../../redux/diagram/actions';\nimport { selectActiveShapeID } from '../../../redux/app/selectors';\nimport { selectShapeContent } from '../../../redux/diagram/selectors';\n\nimport { Wrapper } from './Content.style';\n\nconst Content = ({ activeShapeID, shapeContent, shapeContentSet, diagramStore }) => {\n\n  const { title, url, info } = shapeContent;\n\n  const [localTitle, setTitle] = useState('');\n  const [localURL, setURL]     = useState('');\n  const [localInfo, setInfo]   = useState('');\n\n  useEffect(() => {\n    setTitle(title);\n    setURL(url);\n    setInfo(info);\n  }, [title, url, info]);\n\n  const applyContent = () => {\n    const resShapeContent = {\n      title : localTitle,\n      url   : localURL,\n      info  : localInfo,\n    };\n\n    shapeContentSet(activeShapeID, resShapeContent);\n    diagramStore();\n  };\n\n  const onPressEnter = (event) => {\n    if (event.key !== 'Enter') {\n      return;\n    }\n\n    applyContent();\n  };\n\n  const onClickApply = () => {\n    applyContent();\n  };\n\n  return (\n    <Wrapper>\n      <InputText\n        name=\"title\"\n        placeholder=\"Title\"\n        value={localTitle}\n        onChange={({ target }) => setTitle(target.value)}\n        onKeyPress={onPressEnter}\n      />\n      <InputText\n        name=\"url\"\n        placeholder=\"URL\"\n        value={localURL}\n        onChange={({ target }) => setURL(target.value)}\n        onKeyPress={onPressEnter}\n      />\n      <InputTextarea\n        autoResize\n        rows={3}\n        cols={30}\n        value={localInfo}\n        onChange={({ target }) => setInfo(target.value)}\n      />\n      <Button\n        label=\"Apply\"\n        onClick={onClickApply}\n      />\n    </Wrapper>\n  );\n};\n\nContent.propTypes = {\n  activeShapeID: PropTypes.string.isRequired,\n  shapeContent: PropTypes.shape({\n    title : PropTypes.string,\n    url   : PropTypes.string,\n    info  : PropTypes.string,\n  }).isRequired,\n\n  shapeContentSet : PropTypes.func.isRequired,\n  diagramStore    : PropTypes.func.isRequired,\n};\n\nconst mapState = (state) => {\n  const activeShapeID = selectActiveShapeID(state);\n\n  return {\n    activeShapeID,\n    shapeContent: selectShapeContent(activeShapeID)(state) || {},\n  };\n};\n\nconst mapActions = {\n  shapeContentSet : diagramActions.shapeContentSet,\n  diagramStore    : diagramActions.diagramStore,\n};\n\nexport default connect(mapState, mapActions)(Content);\n","import Content from './Content';\n\nexport default Content;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport ToolbarButton from '../../../components/ToolbarButton';\nimport { NewBox, NewCircle, NewLine, Trash } from '../../../icons';\nimport { TYPES } from '../../../constants/common';\n\nimport appActions from '../../../redux/app/actions';\nimport diagramActions from '../../../redux/diagram/actions';\nimport { selectActiveShapeID } from '../../../redux/app/selectors';\nimport { selectShape } from '../../../redux/diagram/selectors';\n\nconst Elements = (props) => {\n  const {\n    activeShapeID,\n    isShapeSelected,\n    isCurve,\n    createDataSet,\n    activeShapeIDSet,\n    shapeRemove,\n  } = props;\n\n  const onClickRemove = () => {\n    shapeRemove(activeShapeID);\n  };\n\n  const onClickCreate = (shapeType) => {\n    createDataSet({ shapeType });\n    if (shapeType !== TYPES.curve) {\n      activeShapeIDSet('');\n    }\n  };\n\n  return (\n    <div className=\"left-right\">\n      <div className=\"left\">\n        <ToolbarButton\n          id=\"newBox\"\n          title=\"Add new Box\"\n          onClick={() => onClickCreate(TYPES.box)}\n        >\n          <NewBox />\n        </ToolbarButton>\n        <ToolbarButton\n          id=\"newCurve\"\n          title=\"Concat selected shape with another one\"\n          disabled={!isShapeSelected || isCurve}\n          onClick={() => onClickCreate(TYPES.curve)}\n        >\n          <NewLine />\n        </ToolbarButton>\n        <ToolbarButton\n          id=\"newCircle\"\n          title=\"Add new Circle\"\n          onClick={() => onClickCreate(TYPES.circle)}\n        >\n          <NewCircle />\n        </ToolbarButton>\n      </div>\n      {isShapeSelected && (\n        <div className=\"right\">\n          <ToolbarButton\n            id=\"removeShape\"\n            title=\"Remove diagram item\"\n            className=\"last red\"\n            onClick={onClickRemove}\n          >\n            <Trash />\n          </ToolbarButton>\n        </div>\n      )}\n    </div>\n  );\n};\n\nElements.propTypes = {\n  activeShapeID    : PropTypes.string.isRequired,\n  isShapeSelected  : PropTypes.bool.isRequired,\n  isCurve          : PropTypes.bool.isRequired,\n  createDataSet    : PropTypes.func.isRequired,\n  activeShapeIDSet : PropTypes.func.isRequired,\n  shapeRemove      : PropTypes.func.isRequired,\n};\n\nconst mapState = (state) => {\n  const activeShapeID   = selectActiveShapeID(state);\n  const activeShape     = selectShape(activeShapeID)(state) || null;\n  const activeShapeType = (activeShape && activeShape.type);\n\n  return {\n    activeShapeID,\n    isShapeSelected : Boolean(activeShapeID),\n    isCurve         : (activeShapeType === TYPES.curve),\n  };\n};\n\nconst mapActions = {\n  createDataSet    : appActions.createDataSet,\n  activeShapeIDSet : appActions.activeShapeIDSet,\n  shapeRemove      : diagramActions.shapeRemove,\n};\n\nexport default connect(mapState, mapActions)(Elements);\n","import Elements from './Elements';\n\nexport default Elements;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  \n  #pageWidth,\n  #pageHeight {\n  \twidth: 100px;\n  \tmargin-right: 12px;\n  \t.p-spinner {\n  \t\twidth: 100%;\n  \t\t.p-inputtext {\n  \t\t\twidth: 100px;\n  \t\t}\n  \t} \n  }\n`;\n\nexport const Label = styled.div`\n\tdisplay: flex;\n\talign-items: center;\n\tmargin-right: 8px;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport InputNumber from '../../../components/Prime/InputNumber';\n\nimport appActions from '../../../redux/app/actions';\nimport { selectPageData } from '../../../redux/app/selectors';\nimport { Wrapper, Label } from './Page.style';\n\nconst Page = ({ width, height, pageDataSet /*, pageDataReset*/ }) => {\n\n  const onChangeSize = (value, dataName) => {\n    pageDataSet({\n      [dataName]: value,\n    });\n  };\n\n  return (\n    <Wrapper>\n      <Label>W:</Label>\n      <div id=\"pageWidth\">\n        <InputNumber\n          name=\"pageWidth\"\n          value={width}\n          max={1600}\n          step={10}\n          onChange={({ target }) => onChangeSize(target.value, 'width')}\n        />\n      </div>\n      <Label>H:</Label>\n      <div id=\"pageHeight\">\n        <InputNumber\n          name=\"pageHeight\"\n          value={height}\n          max={3600}\n          step={10}\n          onChange={({ target }) => onChangeSize(target.value, 'height')}\n        />\n      </div>\n    </Wrapper>\n  );\n};\n\nPage.propTypes = {\n  width         : PropTypes.number.isRequired,\n  height        : PropTypes.number.isRequired,\n  pageDataSet   : PropTypes.func.isRequired,\n};\n\nconst mapState = (state) => {\n  const { width, height } = selectPageData(state);\n\n  return {\n    width,\n    height,\n  };\n};\n\nconst mapActions = {\n  pageDataSet: appActions.pageDataSet,\n};\n\nexport default connect(mapState, mapActions)(Page);\n","import Page from './Page';\n\nexport default Page;\n","import styled from 'styled-components';\nimport { THEME } from '../../constants/theme';\n\nconst { bg, size } = THEME;\n\nexport const Wrapper = styled.div`\n  position: fixed;\n  top: 0px;\n  right: 0px;\n  width: ${size.toolbar};\n  height: 100vh;\n  display: block;\n  padding: 0 8px;\n  background-color: ${bg.white};\n  box-shadow: -2px 0px 3px 1px ${bg.grey};\n  overflow-y: auto;\n  overflow-x: hidden;\n\n  .left-right {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    width: 100%;\n    box-sizing: border-box;\n\n    .left {\n      display: flex;\n      justify-content: flex-start;\n      align-items: center;\n    }\n    .right {\n      display: flex;\n      justify-content: flex-end;\n      align-items: center;\n    }\n  }\n`;\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport ToolbarRow from '../../components/ToolbarRow';\nimport { selectActiveShapeID } from '../../redux/app/selectors';\nimport { selectShape } from '../../redux/diagram/selectors';\n\nimport Actions from './Actions';\nimport Appearance from './Appearance';\nimport Colors from './Colors';\nimport Content from './Content';\nimport Elements from './Elements';\nimport Page from './Page';\n\nimport { Wrapper } from './Toolbar.style';\nimport { TYPES } from '../../constants/common';\n\nclass Toolbar extends PureComponent {\n\n  static propTypes = {\n    isShapeSelected : PropTypes.bool.isRequired,\n    isBox           : PropTypes.bool.isRequired,\n    isCircle        : PropTypes.bool.isRequired,\n    isCurve         : PropTypes.bool.isRequired,\n  }\n\n  render() {\n    const { isShapeSelected, isBox, isCurve } = this.props;\n\n    const showColors     = (isShapeSelected && isBox);\n    const showAppearance = (isShapeSelected && (isBox || isCurve));\n    const showContent    = (isShapeSelected && isBox);\n\n    return (\n      <Wrapper>\n        <ToolbarRow title=\"Actions\"><Actions /></ToolbarRow>\n        <ToolbarRow title=\"Page\"><Page /></ToolbarRow>\n        <ToolbarRow title=\"Elements\"><Elements /></ToolbarRow>\n        {showColors && (<ToolbarRow title=\"Colors\"><Colors /></ToolbarRow>)}\n        {showAppearance && (\n          <ToolbarRow title=\"Appearance\">\n            <Appearance\n              isBox={isBox}\n              isCurve={isCurve}\n            />\n          </ToolbarRow>\n        )}\n        {showContent && (<ToolbarRow title=\"Content\" noBorder><Content /></ToolbarRow>)}\n      </Wrapper>\n    );\n  }\n}\n\nconst mapState = (state) => {\n  const activeShapeID = selectActiveShapeID(state);\n  const activeShape     = selectShape(activeShapeID)(state) || null;\n  const activeShapeType = (activeShape && activeShape.type);\n\n  return {\n    activeShapeID,\n    isShapeSelected : Boolean(activeShapeID),\n    isBox           : (activeShapeType === TYPES.box),\n    isCircle        : (activeShapeType === TYPES.circle),\n    isCurve         : (activeShapeType === TYPES.curve),\n  };\n};\n\nexport default connect(mapState)(Toolbar);\n","import Toolbar from './Toolbar';\n\nexport default Toolbar;\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\nimport diagramActions from '../../../redux/diagram/actions';\nimport { HTML_IDS } from '../../../constants/layout';\nimport { selectDownloadData } from '../../../redux/diagram/selectors';\n\nconst { downloadLink } = HTML_IDS;\n\nconst DownloadLink = ({ downloadData, actions }) => {\n\tconst jsonData = JSON.stringify(downloadData);\n\tconst blobData = new Blob([jsonData], { type: 'application/json' });\n\tconst dataURL  = window.URL.createObjectURL(blobData);\n\n\tuseEffect(() => {\n\t\tif (downloadData) {\n\t\t\tactions.downloadStart();\n\t\t}\n\t}, [downloadData]);\n\n\treturn (\n\t\t<a\n\t\t\tid={downloadLink}\n\t\t\thref={dataURL}\n\t\t\tdownload=\"diagram.json\"\n\t\t>\n\t\t\tDownload Diagram\n\t\t</a>\n\t);\n};\n\nDownloadLink.propTypes = {\n\tdownloadData: PropTypes.object,\n\tactions: PropTypes.shape({\n\t\tdownloadStart: PropTypes.func.isRequired,\n\t}).isRequired,\n};\n\nDownloadLink.defaultProps = {\n\tdownloadData: null,\n};\n\nconst mapState = (state) => {\n\n\treturn {\n\t\tdownloadData: selectDownloadData(state),\n\t};\n};\n\nconst mapActions = (dispatch) => {\n\n\treturn {\n\t\tactions: bindActionCreators({\n\t\t\tdownloadStart: diagramActions.downloadStart,\n\t\t}, dispatch),\n\t};\n};\n\nconst Connected = connect(mapState, mapActions)(DownloadLink);\nConnected.defaultProps = DownloadLink.defaultProps;\n\nexport default Connected;\n","import DownloadLink from './DownloadLink';\n\nexport default DownloadLink;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\nimport diagramActions from '../../../redux/diagram/actions';\nimport { HTML_IDS } from '../../../constants/layout';\n\nconst { uploadInput } = HTML_IDS;\n\nconst UploadInput = ({ actions }) => {\n\n\treturn (\n\t\t<input\n\t\t\tid={uploadInput}\n\t\t\ttype=\"file\"\n\t\t\taccept=\"application/json\"\n\t\t\tdefaultValue={null}\n\t\t\tonChange={({ target }) => actions.uploadStart(target.files[0])}\n\t\t/>\n\t);\n};\n\nUploadInput.propTypes = {\n\tactions: PropTypes.shape({\n\t\tuploadStart: PropTypes.func.isRequired,\n\t}).isRequired,\n};\n\nconst mapActions = (dispatch) => {\n\n\treturn {\n\t\tactions: bindActionCreators({\n\t\t\tuploadStart: diagramActions.uploadStart,\n\t\t}, dispatch),\n\t};\n};\n\nconst Connected = connect(null, mapActions)(UploadInput);\nConnected.defaultProps = UploadInput.defaultProps;\n\nexport default Connected;\n","import UploadInput from './UploadInput';\n\nexport default UploadInput;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: block;\n  position: absolute;\n  top: -10px;\n  left: -10px;\n  width: 1px;\n  height: 1px;\n  overflow: auto;\n`;\n","import Hidden from './Hidden';\n\nexport default Hidden;\n","import React from 'react';\n\nimport DownloadLink from './DownloadLink';\nimport UploadInput from './UploadInput';\nimport { Wrapper } from './Hidden.style';\n\nconst Hidden = () => {\n\n\treturn (\n\t\t<Wrapper>\n\t\t\t<DownloadLink />\n\t\t\t<UploadInput />\n\t\t</Wrapper>\n\t);\n};\n\nexport default Hidden;\n","import styled from 'styled-components';\nimport { THEME } from '../../constants/theme';\nimport { HTML_IDS } from '../../constants/layout';\n\nconst { bg, size } = THEME;\nconst { downloadLink } = HTML_IDS;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  width: 100vw;\n  height: 100vh;\n  box-sizing: border-box;\n  overflow: hidden;\n  \n  .area {\n    width: calc(100vw - ${size.toolbar});\n    overflow: auto !important;\n    background-color: ${bg.layout};\n    padding: 40px;\n    display: flex;\n    justify-content: center;\n  }\n  \n  .toolbar {\n    width: ${size.toolbar};\n  }\n  \n  a#${downloadLink} {\n  \tposition: absolute;\n  \ttop: -100px;\n  \tleft: -100px;\n  \topacity: 0;\n  \twidth: 0px;\n  \theight: 0px;\n  }\n`;\n","import App from './App';\n\nexport default App;\n","import React, { Component } from 'react';\nimport { Provider } from 'react-redux';\n\nimport { store } from '../../redux/store';\nimport Layout from '../Layout';\nimport Toolbar from '../Toolbar';\nimport Hidden from '../Hidden';\n\nimport { Wrapper } from './App.style';\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Wrapper id=\"app\">\n          <div className=\"area\">\n            <Layout />\n          </div>\n          <div className=\"toolbar\">\n            <Toolbar />\n          </div>\n          <Hidden />\n        </Wrapper>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","/* eslint-disable no-use-before-define */\n/* eslint-disable operator-linebreak */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport 'primereact/resources/themes/nova-light/theme.css';\nimport 'primereact/resources/primereact.min.css';\nimport 'primeicons/primeicons.css';\nimport './index.css';\n\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}